<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Namespaces>
  <Namespace Name="comet">
   <Messages>
    <Message Id="comet" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'comet' in namespace name 'comet' by changing it to 'Comet'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet\bin\Debug\comet.exe">
   <Modules>
    <Module Name="comet.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'comet.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="comet" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'comet' in assembly name 'comet.exe' by changing it to 'Comet'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'comet.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'comet.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="comet">
       <Types>
        <Type Name="AVButton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="898">In method 'AVButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Verdana", 10!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="898">In method 'AVButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Verdana", 10!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="898">In method 'AVButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Verdana", 10!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="893">In method 'AVButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(Me.Hover.ToArgb()))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="895">In method 'AVButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(Me.Hover.ToArgb()))' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="879">In externally visible method 'AVButton.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RoundRect(System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="866">In method 'AVButton.RoundRect(Rectangle, Integer)', object 'P' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'P' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Curve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="865">In member 'AVButton.RoundRect(Rectangle, Integer)', correct the casing of 'Curve' in parameter name 'Curve' by changing it to 'curve'.</Issue>
            </Message>
            <Message Id="Rectangle" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="865">In member 'AVButton.RoundRect(Rectangle, Integer)', correct the casing of 'Rectangle' in parameter name 'Rectangle' by changing it to 'rectangle'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="865">The 'this' parameter (or 'Me' in Visual Basic) of 'AVButton.RoundRect(Rectangle, Integer)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AVComboBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DrawTriangle(System.Drawing.Color,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Graphics)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="738">In method 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', call System.IDisposable.Dispose on object 'New SolidBrush(Clr)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Clr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="733">In member 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'Clr' in parameter name 'Clr' by changing it to 'clr'.</Issue>
            </Message>
            <Message Id="First" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="733">In member 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'First' in parameter name 'FirstPoint' by changing it to 'first'.</Issue>
            </Message>
            <Message Id="G" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="733">In member 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'G' in parameter name 'G' by changing it to 'g'.</Issue>
            </Message>
            <Message Id="Second" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="733">In member 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'Second' in parameter name 'SecondPoint' by changing it to 'second'.</Issue>
            </Message>
            <Message Id="Third" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="733">In member 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'Third' in parameter name 'ThirdPoint' by changing it to 'third'.</Issue>
            </Message>
            <Message Id="G" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="733">In method 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', consider providing a more meaningful name than parameter name 'G'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="733">The 'this' parameter (or 'Me' in Visual Basic) of 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="738">In externally visible method 'AVComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', validate parameter 'G' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="783">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Verdana", 10!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="780">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Color.FromArgb(216, 216, 216)))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="786">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Color.FromArgb(216, 216, 216)))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="787">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Color.FromArgb(216, 216, 216)))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="780">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(216, 216, 216))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="786">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(216, 216, 216))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="787">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(216, 216, 216))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="777">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(Me.C2.ToArgb()))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="783">In method 'AVComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="783">Modify 'AVComboBox.OnPaint(PaintEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="789">Modify 'AVComboBox.OnPaint(PaintEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="775">In externally visible method 'AVComboBox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceItem(System.Object,System.Windows.Forms.DrawItemEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="722">In method 'AVComboBox.ReplaceItem(Object, DrawItemEventArgs)', call System.IDisposable.Dispose on object 'New Font("Verdana", 10!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="725">In method 'AVComboBox.ReplaceItem(Object, DrawItemEventArgs)', call System.IDisposable.Dispose on object 'New Font("Verdana", 10!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="720">In method 'AVComboBox.ReplaceItem(Object, DrawItemEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.LightGray)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="726">Modify 'AVComboBox.ReplaceItem(Object, DrawItemEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="717">In externally visible method 'AVComboBox.ReplaceItem(Object, DrawItemEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartIndex" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_StartIndex(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="709">Modify 'AVComboBox.StartIndex.Set(Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="AVLabel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="688">In method 'AVLabel.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Segoe UI", 9!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="687">In method 'AVLabel.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Segoe UI", 9!, FontStyle.Bold)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="688">In method 'AVLabel.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Segoe UI", 9!, FontStyle.Bold)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="683">In externally visible method 'AVLabel.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AVProgressBar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="634">In method 'AVProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Arial", 13!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="634">In method 'AVProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Arial", 13!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="634">In method 'AVProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Arial", 13!)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="634">Method 'AVProgressBar.OnPaint(PaintEventArgs)' passes a literal string as parameter 'text' of a call to 'Graphics.MeasureString(String, Font)'. Retrieve the following string(s) from a resource table instead: "%".</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="636">In externally visible method 'AVProgressBar.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaintBackground(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="600">In member 'AVProgressBar.OnPaintBackground(PaintEventArgs)', change parameter name 'p' to 'pevent' in order to match the identifier as it has been declared in 'Control.OnPaintBackground(PaintEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AVTabControl" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#B2" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AVTabControl.B2' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_BorderColor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="381">'AVTabControl.BorderColor.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BR1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AVTabControl.BR1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBottomBorder" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_DrawBottomBorder()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="370">'AVTabControl.DrawBottomBorder.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GB1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AVTabControl.GB1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GB2" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AVTabControl.GB2' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnControlAdded(System.Windows.Forms.ControlEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="428">In method 'AVTabControl.OnControlAdded(ControlEventArgs)', call System.IDisposable.Dispose on object 'i' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="427">'AVTabControl.OnControlAdded(ControlEventArgs)' declares a variable, 'i', of type 'TabPage', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="426">In externally visible method 'AVTabControl.OnControlAdded(ControlEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="542">In externally visible method 'AVTabControl.OnMouseMove(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="468">In method 'AVTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'B5' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="511">In method 'AVTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'BR' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="504">In method 'AVTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'BR2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="456">In method 'AVTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'F1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="469">In method 'AVTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'P5' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="500">Modify 'AVTabControl.OnPaint(PaintEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="521">Modify 'AVTabControl.OnPaint(PaintEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="BR" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="511">'AVTabControl.OnPaint(PaintEventArgs)' declares a variable, 'BR', of type 'SolidBrush', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="F1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="456">'AVTabControl.OnPaint(PaintEventArgs)' declares a variable, 'F1', of type 'Font', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="458">In externally visible method 'AVTabControl.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
            <Message Id="GB1" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="455">'GB1', a variable declared in 'AVTabControl.OnPaint(PaintEventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#P1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AVTabControl.P1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#S1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AVTabControl.S1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextAlignment" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_TextAlignment()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="392">'AVTabControl.TextAlignment.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="AVTextbox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Textbox" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Textbox' in type name 'AVTextbox' should be expressed as a compound word, 'TextBox'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MultiLine" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="274">The compound word 'MultiLine' in member name 'AVTextbox.MultiLine()' exists as a discrete term. If your usage is intended to be single word, case it as 'Multiline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="274">Correct the spelling of 'Multi' in member name 'AVTextbox.MultiLine()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="346">In method 'AVTextbox.OnPaint(PaintEventArgs)', object 'B' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'B' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="358">In method 'AVTextbox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Color.FromArgb(216, 216, 216)))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="358">In method 'AVTextbox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(216, 216, 216))' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="360">In externally visible method 'AVTextbox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextChng()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Chng" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="309">Correct the spelling of 'Chng' in member name 'AVTextbox.TextChng()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextChngTxtBox()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Chng" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="306">Correct the spelling of 'Chng' in member name 'AVTextbox.TextChngTxtBox()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AVTheme" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#B1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AVTheme.B1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="62">In externally visible method 'AVTheme.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="98">In method 'AVTheme.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Verdana", 17!, FontStyle.Regular)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="88">In method 'AVTheme.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Color.FromArgb(203, 203, 203)))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="88">In method 'AVTheme.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(203, 203, 203))' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="79">In externally visible method 'AVTheme.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AVWindowButton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="194">In method 'AVWindowButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.DimGray)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="168">In method 'AVWindowButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(Me.Hover.ToArgb()))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="187">In method 'AVWindowButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(Me.Hover.ToArgb()))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="189">In method 'AVWindowButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(Me.Hover.ToArgb()))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="198">In method 'AVWindowButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'gp' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="164">In externally visible method 'AVWindowButton.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RoundRect(System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="151">In method 'AVWindowButton.RoundRect(Rectangle, Integer)', object 'P' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'P' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Curve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="150">In member 'AVWindowButton.RoundRect(Rectangle, Integer)', correct the casing of 'Curve' in parameter name 'Curve' by changing it to 'curve'.</Issue>
            </Message>
            <Message Id="Rectangle" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="150">In member 'AVWindowButton.RoundRect(Rectangle, Integer)', correct the casing of 'Rectangle' in parameter name 'Rectangle' by changing it to 'rectangle'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="150">The 'this' parameter (or 'Me' in Visual Basic) of 'AVWindowButton.RoundRect(Rectangle, Integer)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Bloom" Kind="Struct" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ValueHex" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ValueHex()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1951">'Bloom.ValueHex.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_ValueHex(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1957">'Bloom.ValueHex.Set(String)' appears to have no upstream public or protected callers.</Issue>
              </Message>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1959">Modify 'Bloom.ValueHex.Set(String)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="btnColorProperty" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="btn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'btn' in type name 'btnColorProperty' by changing it to 'Btn'.</Issue>
          </Message>
          <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in type name 'btnColorProperty'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#myList()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="919">The 'this' parameter (or 'Me' in Visual Basic) of 'btnColorProperty.myList()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="btnimProperty" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="btnim" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'btnim' in type name 'btnimProperty' by changing it to 'Btnim'.</Issue>
          </Message>
          <Message Id="btnim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btnim' in type name 'btnimProperty'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#myList()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class5.vb" Line="221">The 'this' parameter (or 'Me' in Visual Basic) of 'btnimProperty.myList()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="clsButtonBlue" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Border" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'clsButtonBlue.Border' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintHook()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2250">In method 'clsButtonBlue.PaintHook()', call System.IDisposable.Dispose on object 'LGB1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2269">In method 'clsButtonBlue.PaintHook()', call System.IDisposable.Dispose on object 'LGBD1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2260">In method 'clsButtonBlue.PaintHook()', call System.IDisposable.Dispose on object 'LGBO1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2254">In method 'clsButtonBlue.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(0, 116, 172))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2264">In method 'clsButtonBlue.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(0, 116, 172))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2273">In method 'clsButtonBlue.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(0, 116, 172))' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="clsButtonGreen" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'clsButtonGreen' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Border" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'clsButtonGreen.Border' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintHook()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2199">In method 'clsButtonGreen.PaintHook()', call System.IDisposable.Dispose on object 'LGB1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2218">In method 'clsButtonGreen.PaintHook()', call System.IDisposable.Dispose on object 'LGBD1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2209">In method 'clsButtonGreen.PaintHook()', call System.IDisposable.Dispose on object 'LGBO1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2203">In method 'clsButtonGreen.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(0, 124, 0))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2213">In method 'clsButtonGreen.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(0, 124, 0))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2222">In method 'clsButtonGreen.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(0, 124, 0))' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="clsButtonGrey" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'clsButtonGrey' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Border" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'clsButtonGrey.Border' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintHook()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2404">In method 'clsButtonGrey.PaintHook()', call System.IDisposable.Dispose on object 'LGB1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2423">In method 'clsButtonGrey.PaintHook()', call System.IDisposable.Dispose on object 'LGBD1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2414">In method 'clsButtonGrey.PaintHook()', call System.IDisposable.Dispose on object 'LGBO1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2408">In method 'clsButtonGrey.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(111, 111, 111))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2418">In method 'clsButtonGrey.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(111, 111, 111))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2427">In method 'clsButtonGrey.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(111, 111, 111))' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="clsButtonOrange" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Border" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'clsButtonOrange.Border' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintHook()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2300">In method 'clsButtonOrange.PaintHook()', call System.IDisposable.Dispose on object 'LGB1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2319">In method 'clsButtonOrange.PaintHook()', call System.IDisposable.Dispose on object 'LGBD1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2310">In method 'clsButtonOrange.PaintHook()', call System.IDisposable.Dispose on object 'LGBO1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2304">In method 'clsButtonOrange.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(184, 112, 0))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2314">In method 'clsButtonOrange.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(184, 112, 0))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2323">In method 'clsButtonOrange.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(184, 112, 0))' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="clsButtonPurple" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'clsButtonPurple' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Border" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'clsButtonPurple.Border' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintHook()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2352">In method 'clsButtonPurple.PaintHook()', call System.IDisposable.Dispose on object 'LGB1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2372">In method 'clsButtonPurple.PaintHook()', call System.IDisposable.Dispose on object 'LGBD1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2362">In method 'clsButtonPurple.PaintHook()', call System.IDisposable.Dispose on object 'LGBO1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2356">In method 'clsButtonPurple.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(165, 16, 178))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2366">In method 'clsButtonPurple.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(165, 16, 178))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2376">In method 'clsButtonPurple.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(165, 16, 178))' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="clsControlMenu" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'clsControlMenu' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BG" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'clsControlMenu.BG' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edge" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'clsControlMenu.Edge' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2117">In externally visible method 'clsControlMenu.OnMouseMove(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintHook()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2143">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New Font("Marlett", 10!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2141">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New Font("Marlett", 8.25!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2142">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New Font("Marlett", 8.25!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2142">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New Font("Marlett", 8.25!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2168">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(20, Color.Black))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2170">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(20, Color.Black))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2172">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(20, Color.Black))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2138">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(239, 239, 242))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2160">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(40, Color.White))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2162">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(40, Color.White))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2164">In method 'clsControlMenu.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(40, Color.White))' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="clsNeoBuxTheme" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'clsNeoBuxTheme' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#PaintHook()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2084">In method 'clsNeoBuxTheme.PaintHook()', call System.IDisposable.Dispose on object 'LGB' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2085">In method 'clsNeoBuxTheme.PaintHook()', call System.IDisposable.Dispose on object 'New Pen(Color.LightGray)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2077">In method 'clsNeoBuxTheme.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.LightGray)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2080">In method 'clsNeoBuxTheme.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Color.WhiteSmoke)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2074">In method 'clsNeoBuxTheme.PaintHook()', call System.IDisposable.Dispose on object 'New SolidBrush(Me.BackColor)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="clsVistaToolStripRenderer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="cls" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'cls' in type name 'clsVistaToolStripRenderer' by changing it to 'Cls'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#clrBGBorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrBGBorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrBGBottom1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrBGBottom1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrBGBottom2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrBGBottom2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrBGGreen" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrBGGreen' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrBGTop1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrBGTop1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrBGTop2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrBGTop2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrBtnDarkBorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrBtnDarkBorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Btn' in member name 'clsVistaToolStripRenderer.clrBtnDarkBorder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrBtnLightBorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrBtnLightBorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Btn' in member name 'clsVistaToolStripRenderer.clrBtnLightBorder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrCheckBG" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrCheckBG' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrCheckBorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrCheckBorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrImageMarginLine" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrImageMarginLine' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBBottom" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBBottom' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBBottomMid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBBottomMid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBButtonDark" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBButtonDark' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBButtonDarkBorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBButtonDarkBorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBButtonLight" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBButtonLight' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBButtonLightBorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBButtonLightBorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBLowerBottomLine" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBLowerBottomLine' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBTop" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBTop' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBTopMid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBTopMid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMBUpperBottomLine" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMBUpperBottomLine' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrMenuBorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrMenuBorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrSelectedBorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrSelectedBorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrSelectGradBottom" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrSelectGradBottom' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clrSelectGradTop" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'clsVistaToolStripRenderer.clrSelectGradTop' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRoundedRectangle(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="mint" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', the compound word 'mint' in parameter name 'm_intHeight' exists as a discrete term. If your usage is intended to be single word, case it as 'mint' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', the compound word 'mint' in parameter name 'm_intWidth' exists as a discrete term. If your usage is intended to be single word, case it as 'mint' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="minty" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', the compound word 'minty' in parameter name 'm_intyAxis' exists as a discrete term. If your usage is intended to be single word, case it as 'minty' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="55">In method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', call System.IDisposable.Dispose on object 'pen' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="diameter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the casing of 'diameter' in parameter name 'm_diameter' by changing it to 'Diameter'.</Issue>
            </Message>
            <Message Id="int" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the casing of 'int' in parameter name 'm_intHeight' by changing it to 'Int'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the casing of 'int' in parameter name 'm_intWidth' by changing it to 'Int'.</Issue>
            </Message>
            <Message Id="intx" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the casing of 'intx' in parameter name 'm_intxAxis' by changing it to 'Intx'.</Issue>
            </Message>
            <Message Id="inty" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the casing of 'inty' in parameter name 'm_intyAxis' by changing it to 'Inty'.</Issue>
            </Message>
            <Message Id="intx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the spelling of 'intx' in parameter name 'm_intxAxis' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="inty" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the spelling of 'inty' in parameter name 'm_intyAxis' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the spelling of 'm' in parameter name 'm_diameter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the spelling of 'm' in parameter name 'm_intHeight' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the spelling of 'm' in parameter name 'm_intWidth' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the spelling of 'm' in parameter name 'm_intxAxis' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', correct the spelling of 'm' in parameter name 'm_intyAxis' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', consider replacing the language-specific data type identifier 'int' in parameter name 'm_intHeight' with a more generic term, such as 'value'.</Issue>
             <Issue Name="LanguageSpecificMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', consider replacing the language-specific data type identifier 'int' in parameter name 'm_intWidth' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', remove the underscores from parameter name 'm_diameter'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', remove the underscores from parameter name 'm_intHeight'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', remove the underscores from parameter name 'm_intWidth'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', remove the underscores from parameter name 'm_intxAxis'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">In member 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', remove the underscores from parameter name 'm_intyAxis'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="48">The 'this' parameter (or 'Me' in Visual Basic) of 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="61">In externally visible method 'clsVistaToolStripRenderer.DrawRoundedRectangle(Graphics, Integer, Integer, Integer, Integer, Integer, Color)', validate parameter 'objGraphics' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize(System.Windows.Forms.ToolStrip)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="90">In externally visible method 'clsVistaToolStripRenderer.Initialize(ToolStrip)', validate parameter 'toolStrip' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="201">In externally visible method 'clsVistaToolStripRenderer.OnRenderArrow(ToolStripArrowRenderEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="237">In method 'clsVistaToolStripRenderer.OnRenderImageMargin(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'DarkLine' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="238">In method 'clsVistaToolStripRenderer.OnRenderImageMargin(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'WhiteLine' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="243">In method 'clsVistaToolStripRenderer.OnRenderImageMargin(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'borderPen' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="239">In externally visible method 'clsVistaToolStripRenderer.OnRenderImageMargin(ToolStripRenderEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="224">In method 'clsVistaToolStripRenderer.OnRenderItemCheck(ToolStripItemImageRenderEventArgs)', call System.IDisposable.Dispose on object 'b2' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="222">In externally visible method 'clsVistaToolStripRenderer.OnRenderItemCheck(ToolStripItemImageRenderEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="163">In method 'clsVistaToolStripRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs)', call System.IDisposable.Dispose on object 'b' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="175">In method 'clsVistaToolStripRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs)', call System.IDisposable.Dispose on object 'b' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="164">In method 'clsVistaToolStripRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs)', call System.IDisposable.Dispose on object 'b2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="176">In method 'clsVistaToolStripRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs)', call System.IDisposable.Dispose on object 'b2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="189">In method 'clsVistaToolStripRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs)', call System.IDisposable.Dispose on object 'b2' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="b" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="175">'clsVistaToolStripRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs)' declares a variable, 'b', of type 'LinearGradientBrush', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="b2" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="164">'clsVistaToolStripRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs)' declares a variable, 'b2', of type 'SolidBrush', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="160">In externally visible method 'clsVistaToolStripRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="209">In method 'clsVistaToolStripRenderer.OnRenderSeparator(ToolStripSeparatorRenderEventArgs)', call System.IDisposable.Dispose on object 'DarkLine' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="210">In method 'clsVistaToolStripRenderer.OnRenderSeparator(ToolStripSeparatorRenderEventArgs)', call System.IDisposable.Dispose on object 'WhiteLine' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="211">In externally visible method 'clsVistaToolStripRenderer.OnRenderSeparator(ToolStripSeparatorRenderEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="141">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me.clrBGBorder, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="136">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me.clrBGTop2)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="123">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me.clrMBLowerBottomLine)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="122">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me.clrMBUpperBottomLine)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="118">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'bottomBrush' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="131">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'bottomBrush' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="134">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'horGradBrush' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="117">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'topBrush' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="130">In method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', call System.IDisposable.Dispose on object 'topBrush' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="111">In externally visible method 'clsVistaToolStripRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRenderToolStripPanelBackground(System.Windows.Forms.ToolStripPanelRenderEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="151">In method 'clsVistaToolStripRenderer.OnRenderToolStripPanelBackground(ToolStripPanelRenderEventArgs)', call System.IDisposable.Dispose on object 'bottomBrush' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="150">In method 'clsVistaToolStripRenderer.OnRenderToolStripPanelBackground(ToolStripPanelRenderEventArgs)', call System.IDisposable.Dispose on object 'topBrush' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class8.vb" Line="147">In externally visible method 'clsVistaToolStripRenderer.OnRenderToolStripPanelBackground(ToolStripPanelRenderEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Data" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Name="MakeOverridable" Certainty="60" Level="Error">Make 'Data'.GetObjectData virtual and overridable.</Issue>
          </Message>
          <Message TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Name="MakeUnsealedMagicConstructorFamily" Certainty="95" Level="Error">Declare the serialization constructor of 'Data', an unsealed type, as protected.</Issue>
          </Message>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">The type name 'Data' conflicts in whole or in part with the namespace name 'System.Data' defined in the .NET Framework. Rename the type to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ctxt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="177">In method 'Data.New(SerializationInfo, StreamingContext)', correct the spelling of 'ctxt' in parameter name 'ctxt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="178">In externally visible method 'Data.New(SerializationInfo, StreamingContext)', validate parameter 'info' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Drawing.Image,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="174">In method 'Data.New(String, Image, Byte())', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="p" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="174">In method 'Data.New(String, Image, Byte())', consider providing a more meaningful name than parameter name 'p'.</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="174">In method 'Data.New(String, Image, Byte())', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="185">Change 'Data.GetData()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetImage()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="188">Change 'Data.GetImage()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="182">Add the following security attribute to 'Data.GetObjectData(SerializationInfo, StreamingContext)' in order to match a LinkDemand on base method 'ISerializable.GetObjectData(SerializationInfo, StreamingContext)':  [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.SerializationFormatter)].</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="182">In member 'Data.GetObjectData(SerializationInfo, StreamingContext)', change parameter name 'ctxt' to 'context' in order to match the identifier as it has been declared in 'ISerializable.GetObjectData(SerializationInfo, StreamingContext)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="183">In externally visible method 'Data.GetObjectData(SerializationInfo, StreamingContext)', validate parameter 'info' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DownloadContainer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#cancel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DownloadContainer.cancel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#identification" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DownloadContainer.identification' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nextPart" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DownloadContainer.nextPart' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DrawHelpers" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#RoundRect(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="20">'DrawHelpers.RoundRect(Single, Single, Single, Single, Single, Boolean, Boolean, Boolean, Boolean)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="22">In method 'DrawHelpers.RoundRect(Single, Single, Single, Single, Single, Boolean, Boolean, Boolean, Boolean)', object 'RoundRect' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'RoundRect' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RoundRectangle(System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="10">In method 'DrawHelpers.RoundRectangle(Rectangle, Integer)', object 'P' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'P' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FiczZzZzZz" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'FiczZzZzZz' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Form1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="UIType" Certainty="75" Level="Warning">'Form1' is coupled with 86 different (non-IComponent) types from 18 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AnimateWindow(System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'Form1.AnimateWindow(Integer, Integer, Integer)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form1.AnimateWindow(Integer, Integer, Integer)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hwnd' of P/Invoke 'Form1.AnimateWindow(Integer, Integer, Integer)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'Integer'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'Form1.AnimateWindow(Integer, Integer, Integer)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#appPath" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form1.appPath' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1727">Modify 'Form1.ChToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CLXToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1758">Modify 'Form1.CLXToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#colord()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="colord" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="101">Correct the casing of 'colord' in member name 'Form1.colord()' by changing it to 'Colord'.</Issue>
            </Message>
            <Message Id="colord" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="101">Correct the spelling of 'colord' in member name 'Form1.colord()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#colordblak()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="colordblak" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="109">Correct the casing of 'colordblak' in member name 'Form1.colordblak()' by changing it to 'Colordblak'.</Issue>
            </Message>
            <Message Id="colordblak" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="109">Correct the spelling of 'colordblak' in member name 'Form1.colordblak()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CommentsToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1678">'Form1.CommentsToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Connected(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xxx" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="207">'xxx', a parameter declared in 'Form1.Connected(Integer)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyIPToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1584">Modify 'Form1.CopyIPToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#data(comet.Data)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="212">Correct the casing of 'data' in member name 'Form1.data(Data)' by changing it to 'Data'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="213">In externally visible method 'Form1.data(Data)', validate parameter 'info' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#data(System.Int32,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="UIMethod" Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="222">'Form1.data(Integer, Byte())' is coupled with 42 different (non-IComponent) types from 14 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="222">'Form1.data(Integer, Byte())' has a cyclomatic complexity of 276. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="222">'Form1.data(Integer, Byte())' has 308 local variables, 187 of which were generated by the compiler. Refactor 'Form1.data(Integer, Byte())' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="222">'Form1.data(Integer, Byte())' has a maintainability index of 0. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1042">In method 'Form1.data(Integer, Byte())', call System.IDisposable.Dispose on object 'f' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="918">In method 'Form1.data(Integer, Byte())', call System.IDisposable.Dispose on object 'fm' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1285">In method 'Form1.data(Integer, Byte())', call System.IDisposable.Dispose on object 'fm' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="311">In method 'Form1.data(Integer, Byte())', call System.IDisposable.Dispose on object 'm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="343">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="898">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="972">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " | ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1027">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " | ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1045">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " | ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1086">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " | ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1104">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " | ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1122">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " | ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1203">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " | ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="442">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Chatting - ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="457">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Chatting - ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="657">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Get ClipBoard - ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1288">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Password - ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="565">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Registry - ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="357">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Active Window : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="353">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Antivirus : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="392">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "BIOS Release Date : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="398">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "BIOS Vendor : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="394">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "BIOS Version : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="365">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Command Line : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="376">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Computer Name : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="361">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Computer Open : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="349">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Country : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="363">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Current Directory : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="388">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Identifier : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="351">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Language : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="359">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Local Time : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="378">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Operating System : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="380">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Operating System Platform : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="382">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Operating System version : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="386">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Processor Name : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="384">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "RAM : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="367">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "System Directory : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="396">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "System Manufacturer : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="390">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "System Product : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="369">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "User Domain Name : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="371">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "User Interactive : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="345">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Username :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="347">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Victime Name : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="355">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Webcam : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="373">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Working Set : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="491">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "[ ,  ] is Deleting ...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="489">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "[ ,  ] is writing ...".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.LinkLabel.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="873">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Size: ,  (Indolence)".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ListView+ListViewItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="243">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "User Login : IP: ,  ServerID : ,  Time : ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ListViewItem+ListViewSubItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="720">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'ListViewItem.ListViewSubItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " B".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="712">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'ListViewItem.ListViewSubItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " GB".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="718">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'ListViewItem.ListViewSubItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " KB".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="715">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'ListViewItem.ListViewSubItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " MB".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ListViewItem+ListViewSubItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="253">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'text' of a call to 'ListViewItem.ListViewSubItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="508">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "(Victim):".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="497">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1003">Method 'Form1.data(Integer, Byte())' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cup : ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="595">Modify 'Form1.data(Integer, Byte())' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="609">Modify 'Form1.data(Integer, Byte())' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1267">Modify 'Form1.data(Integer, Byte())' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1293">Modify 'Form1.data(Integer, Byte())' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="B" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="222">In member 'Form1.data(Integer, Byte())', correct the casing of 'B' in parameter name 'B' by changing it to 'b'.</Issue>
            </Message>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="222">Correct the casing of 'data' in member name 'Form1.data(Integer, Byte())' by changing it to 'Data'.</Issue>
            </Message>
            <Message Id="B" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="222">In method 'Form1.data(Integer, Byte())', consider providing a more meaningful name than parameter name 'B'.</Issue>
            </Message>
            <Message Id="ServerID" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="243">Correct the spelling of the unrecognized token 'ServerID' in the literal '" ServerID : "'.</Issue>
            </Message>
            <Message Id="Victime" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="347">Correct the spelling of the unrecognized token 'Victime' in the literal '"Victime Name : "'.</Issue>
            </Message>
            <Message Id="BB" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="887">'Form1.data(Integer, Byte())' declares a variable, 'BB', of type 'Byte()', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="Li" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="344">'Form1.data(Integer, Byte())' declares a variable, 'Li', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="reg" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="556">'Form1.data(Integer, Byte())' declares a variable, 'reg', of type 'Form32', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="301">'Form1.data(Integer, Byte())' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt64(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="709">Because the behavior of 'Convert.ToInt64(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'Convert.ToInt64(String, IFormatProvider)'. If the result of 'Convert.ToInt64(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="722">Because the behavior of 'Convert.ToInt64(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'Convert.ToInt64(String, IFormatProvider)'. If the result of 'Convert.ToInt64(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="712">Because the behavior of 'Double.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'Double.ToString(IFormatProvider)'. If the result of 'Double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="715">Because the behavior of 'Double.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'Double.ToString(IFormatProvider)'. If the result of 'Double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="718">Because the behavior of 'Double.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'Double.ToString(IFormatProvider)'. If the result of 'Double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="246">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="720">Because the behavior of 'Long.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'Long.ToString(IFormatProvider)'. If the result of 'Long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="733">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="733">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="733">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="733">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="735">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="737">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="737">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="737">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="737">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="737">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="737">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="737">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="737">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="739">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="739">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="739">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="739">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="741">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="743">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="743">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="743">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="743">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="745">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="747">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="749">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="749">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="751">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="751">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="751">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="751">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="751">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="751">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="753">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="755">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="757">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="757">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="757">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="757">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="757">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="757">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="757">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="757">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="759">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="759">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="761">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="763">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="763">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="763">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="763">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="763">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="763">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="765">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="765">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="767">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="767">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="767">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="767">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="767">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="767">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="767">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="767">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="769">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="769">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="771">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="773">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="773">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="773">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="773">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="775">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="775">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="777">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="777">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="777">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="777">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="779">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="779">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="781">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="781">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="783">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="783">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="785">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="785">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="787">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="787">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="789">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="789">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="791">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="791">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="791">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="791">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="791">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="791">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="791">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="791">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="793">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="793">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="795">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="795">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="797">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="797">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="799">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="799">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="801">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="801">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="803">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="803">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="805">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="805">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="807">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="807">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="807">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="807">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="809">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="809">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="811">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="811">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="813">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="813">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="815">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="815">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="817">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="817">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="817">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="817">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="819">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="819">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="821">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="821">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="823">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="823">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="825">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="825">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="825">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="825">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="827">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="827">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="829">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="829">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="831">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="831">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="833">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="833">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="833">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="833">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="835">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="835">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="837">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="837">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="839">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="839">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="839">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="839">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="708">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="708">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="708">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="724">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="727">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="730">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form1.data(Integer, Byte())' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="873">In externally visible method 'Form1.data(Integer, Byte())', validate parameter 'B' before using it.</Issue>
            </Message>
            <Message Id="xxx" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="222">'xxx', a parameter declared in 'Form1.data(Integer, Byte())', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEB(System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1546">Modify 'Form1.DEB(ByRef String)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1540">Consider a design that does not require that 's' be a reference parameter.</Issue>
            </Message>
            <Message Id="DEB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1540">Correct the casing of 'DEB' in member name 'Form1.DEB(ByRef String)' by changing it to 'Deb'.</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1540">In method 'Form1.DEB(ByRef String)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Disconnect(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="203">Modify 'Form1.Disconnect(Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="203">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.Disconnect(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="xxx" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="201">'xxx', a parameter declared in 'Form1.Disconnect(Integer)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DosToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1748">Modify 'Form1.DosToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ENB(System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1537">Consider a design that does not require that 's' be a reference parameter.</Issue>
            </Message>
            <Message Id="ENB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1537">Correct the casing of 'ENB' in member name 'Form1.ENB(ByRef String)' by changing it to 'Enb'.</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1537">In method 'Form1.ENB(ByRef String)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#folder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.folder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#folder1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.folder1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form1_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="93">Modify 'Form1.Form1_FormClosing(Object, FormClosingEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form1_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TabPage.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="154">Method 'Form1.Form1_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Controller".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="169">Method 'Form1.Form1_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "The Case of The Port |- Connected To The Following Port : ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="171">Modify 'Form1.Form1_Load(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="comet.Form1.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="159">'Form1.Form1_Load(Object, EventArgs)' calls 'Form1.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="160">'Form1.Form1_Load(Object, EventArgs)' calls 'Form1.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromDiskToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1467">In method 'Form1.FromDiskToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'o' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromLinkToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1485">Modify 'Form1.FromLinkToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#infg()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="infg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1794">Correct the casing of 'infg' in member name 'Form1.infg()' by changing it to 'Infg'.</Issue>
            </Message>
            <Message Id="infg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1794">Correct the spelling of 'infg' in member name 'Form1.infg()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sc" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1794">'Form1.infg()' declares a variable, 'sc', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="144">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "CheckBox1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1010">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "CheckBox2".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1065">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Acitve Windows".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1060">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti Virus".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1070">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "CAM".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1080">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "CPU".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1105">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Charging".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1050">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Country".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1040">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "IP".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1090">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Install Date".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1100">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Internal IP".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1055">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "OS".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1045">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "PC / User".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1075">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "RAM".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1035">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Server ID".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1085">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Ver".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1095">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "company".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1163">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "logs".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="181">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Get ClipBoard ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="845">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1207">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Comet  ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TabPage.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="972">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "TabPage1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="455">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "About System".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="353">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ActiveWindows".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="303">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Chat".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="519">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Close".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="569">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Comments".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="414">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Computer Stillness".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="384">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Computer restart".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="394">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Computer shutdown".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="223">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Control Panel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="488">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy IP internal".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="477">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy IP".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="323">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Ddos Attack".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="233">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="444">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Get ClipBoard ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="434">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Get Passwords".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="273">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Installed Programs".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="313">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "KeyLogger".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="404">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Log out computer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="283">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Microphone".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="363">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Open WebSite".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="374">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Power PC".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="263">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Process Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="243">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Remote Desktop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="424">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Remote Regedit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="509">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Remote Server".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="253">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Remote Shell".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="549">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Rename".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="529">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Restart".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="192">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="202">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run From Disk".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="212">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run From Link".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="498">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run Scripts".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="293">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Scheduled Tasks".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="873">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Selected (0)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="333">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Service Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="466">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "System Information".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="539">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Uninstall".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="559">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Victim Data".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="860">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Wait On The Unknown Port ( 0 )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="343">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "network".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="908">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "My Favorites".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="921">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "My Favorites".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="829">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form1.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="Acitve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1065">Correct the spelling of the unrecognized token 'Acitve' in the literal '"Acitve Windows"'.</Issue>
            </Message>
            <Message Id="ActiveWindows" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="353">Correct the spelling of the unrecognized token 'ActiveWindows' in the literal '"ActiveWindows"'.</Issue>
            </Message>
            <Message Id="Ddos" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="323">Correct the spelling of the unrecognized token 'Ddos' in the literal '"Ddos Attack"'.</Issue>
            </Message>
            <Message Id="KeyLogger" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="313">Correct the spelling of the unrecognized token 'KeyLogger' in the literal '"KeyLogger"'.</Issue>
            </Message>
            <Message Id="Regedit" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="424">Correct the spelling of the unrecognized token 'Regedit' in the literal '"Remote Regedit"'.</Issue>
            </Message>
            <Message Id="Ver" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.Designer.vb" Line="1085">Correct the spelling of the unrecognized token 'Ver' in the literal '"Ver"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#L1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1440">'Form1.L1_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#L1_ColumnClick(System.Object,System.Windows.Forms.ColumnClickEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="188">Modify 'Form1.L1_ColumnClick(Object, ColumnClickEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#L1_ItemRemoved(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ListView+ListViewItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1769">Method 'Form1.L1_ItemRemoved(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "The user logs off :  IP : ,  ServerID : ,  Time :".</Issue>
            </Message>
            <Message Id="ServerID" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1769">Correct the spelling of the unrecognized token 'ServerID' in the literal '" ServerID : "'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Message" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form1.Message' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenDownloadFolderToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1636">'Form1.OpenDownloadFolderToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenWebSiteToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1498">Modify 'Form1.OpenWebSiteToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox1_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1628">'Form1.PictureBox1_MouseDoubleClick(Object, MouseEventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pinger" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.pinger' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pinger" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pinger' in member name 'Form1.pinger' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pw" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.pw' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pw' in member name 'Form1.pw' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QZ(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="34">'Form1.QZ(Integer)' has a cyclomatic complexity of 85. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="q" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="34">In method 'Form1.QZ(Integer)', consider providing a more meaningful name than parameter name 'q'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="85">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.QZ(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="85">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.QZ(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="86">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.QZ(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="86">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.QZ(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegeditToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1413">Modify 'Form1.RegeditToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoteDesktopToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1574">'Form1.RemoteDesktopToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenameToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1513">Modify 'Form1.RenameToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#S" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="S" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'Form1.S()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form1.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form1.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form1.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form1.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tictoc" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.tictoc' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tictoc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tictoc' in member name 'Form1.tictoc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1299">'Form1.Timer1_Tick(Object, EventArgs)' has a cyclomatic complexity of 63. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1301">Method 'Form1.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Comet v 0.1.4.0 - Users Online [ x ]".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.PictureBox.set_ImageLocation(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1308">Method 'Form1.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Ls.png".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1303">Method 'Form1.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Selected(, )".</Issue>
            </Message>
            <Message Id="Ls" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1308">Correct the spelling of the unrecognized token 'Ls' in the literal '"IOS\Ls.png"'.</Issue>
            </Message>
            <Message Id="png" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1308">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Ls.png"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer4_Tick_1(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Decimal.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1655">Because the behavior of 'Decimal.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.Timer4_Tick_1(Object, EventArgs)' with a call to 'Decimal.ToString(IFormatProvider)'. If the result of 'Decimal.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1716">Modify 'Form1.TToolStripMenuItem_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UninstallToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1531">Method 'Form1.UninstallToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(String, String, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Uninstall".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1531">Method 'Form1.UninstallToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(String, String, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Are you sure To want to Uninstall Server ?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form1.vb" Line="1531">Change 'Form1.UninstallToolStripMenuItem_Click(Object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UODNNXMATTYW" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.UODNNXMATTYW' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#useru" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.useru' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="useru" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'useru' in member name 'Form1.useru' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Yy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.Yy' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Yy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Yy' in member name 'Form1.Yy' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form1+_Data" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="B" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="85" Level="Error">In delegate 'Form1._Data', correct the casing of 'B' in parameter name 'B' by changing it to 'b'.</Issue>
          </Message>
          <Message Id="B" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'Form1._Data', consider providing a more meaningful name than parameter name 'B'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Form1._Data'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Form1._Data'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Form1+_Datad" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datad" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datad' in type name 'Form1._Datad'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Form1._Datad'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Form1._Datad'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Form10" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ComboBox1_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="31">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="32">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="23">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="20">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1200".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="28">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "250".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="29">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "300".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="25">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "350".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="34">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "450".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="22">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "550".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="26">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "600".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="19">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "650".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="35">Method 'Form10.ComboBox1_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "900".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="89">Method 'Form10.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "x &amp; y".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="128">Method 'Form10.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Oky".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="229">Method 'Form10.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Size - Desktop (x,y)".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="150">Method 'Form10.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "650 x 1200".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="67">Method 'Form10.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Size :    Length       Display".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="57">Method 'Form10.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="77">Method 'Form10.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
            </Message>
            <Message Id="comet.ThemeControl154.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="202">Method 'Form10.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ThemeControl154.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Exit".</Issue>
            </Message>
            <Message Id="Oky" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.Designer.vb" Line="128">Correct the spelling of the unrecognized token 'Oky' in the literal '"Oky"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="59">Method 'Form10.PictureBox1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "650 &amp; 1200".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="78">Method 'Form10.PictureBox2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "550 &amp; 1000".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="96">Method 'Form10.PictureBox3_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "450 &amp; 900".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form10.vb" Line="114">Method 'Form10.PictureBox4_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "350 &amp; 600".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form11" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="41">'Form11.Button1_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button10_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="144">Modify 'Form11.Button10_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button11_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="154">Modify 'Form11.Button11_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button13_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="170">In method 'Form11.Button13_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'o' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button14_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="187">Modify 'Form11.Button14_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button16_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="213">'Form11.Button16_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button17_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="222">In method 'Form11.Button17_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'o' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button18_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="234">'Form11.Button18_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button20_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="241">'Form11.Button20_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button21_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="251">Modify 'Form11.Button21_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button7_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="108">Modify 'Form11.Button7_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button9_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="133">Modify 'Form11.Button9_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="356">Method 'Form11.DToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'FileSystemProxy.WriteAllText(String, String, Boolean)'. Retrieve the following string(s) from a resource table instead: "------{0} = H".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form11_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="15">Method 'Form11.Form11_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "User ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HideInformationServerToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="313">Method 'Form11.HideInformationServerToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'FileSystemProxy.WriteAllText(String, String, Boolean)'. Retrieve the following string(s) from a resource table instead: "Hardware information = H".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="91">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "MenuStrip1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="604">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "VisualStudioSeperator1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="622">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Form11".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="256">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "About".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="148">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Additions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="110">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Builder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="238">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Classic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="191">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Details".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="231">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Display Screen".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="224">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Display".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="247">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Help".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="166">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide Desktop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="199">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Large".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="207">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "List".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="139">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save Victim's Info".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="119">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="129">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ScreenShot".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="174">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Show Desktop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="215">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Small".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="158">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="100">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Tools".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="183">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "View".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="552">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: " Process Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="540">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Chat".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="492">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Ddos Attack".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="348">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Execution of an order".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="480">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "File Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="324">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Get Passwords".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="564">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Installed Programs".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="468">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "KeyLogger".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="528">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Microphone".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="396">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Msg".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="336">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Open WebSite".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="372">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Operation and killed".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="504">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Remote Desktop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="516">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Remote Regedit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="456">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Remote Shell".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="432">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Run From Disk".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="420">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Run From Link".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="408">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Run Scripts".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="576">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Scheduled Tasks".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="312">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "Service Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="444">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "System Information".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="384">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "desktop background".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="360">Method 'Form11.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "scan ports".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="582">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form11.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="Ddos" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="492">Correct the spelling of the unrecognized token 'Ddos' in the literal '"Ddos Attack"'.</Issue>
            </Message>
            <Message Id="KeyLogger" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="468">Correct the spelling of the unrecognized token 'KeyLogger' in the literal '"KeyLogger"'.</Issue>
            </Message>
            <Message Id="Msg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="396">Correct the spelling of the unrecognized token 'Msg' in the literal '"Msg"'.</Issue>
            </Message>
            <Message Id="Regedit" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.Designer.vb" Line="516">Correct the spelling of the unrecognized token 'Regedit' in the literal '"Remote Regedit"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RememberTheThumbnailToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="284">In method 'Form11.RememberTheThumbnailToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 's' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="285">Method 'Form11.RememberTheThumbnailToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "Screen capture|*.png".</Issue>
            </Message>
            <Message Id="png" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="285">Correct the spelling of the unrecognized token 'png' in the literal '"Screen capture|*.png"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form11.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form11.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form11.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form11.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SeveNameServerInformationToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="266">In method 'Form11.SeveNameServerInformationToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'o' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="271">Method 'Form11.SeveNameServerInformationToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'FileSystemProxy.WriteAllText(String, String, Boolean)'. Retrieve the following string(s) from a resource table instead: "Server ID : , " &amp; ChrW(13) &amp; ChrW(10) &amp; " IP : , " &amp; ChrW(13) &amp; ChrW(10) &amp; " PC...".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="267">Method 'Form11.SeveNameServerInformationToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "Txt|*.Txt".</Issue>
            </Message>
            <Message Id="Acitve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="271">Correct the spelling of the unrecognized token 'Acitve' in the literal 'ChrW(13) &amp; ChrW(10) &amp; " Acitve Windows  : "'.</Issue>
            </Message>
            <Message Id="Ver" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="271">Correct the spelling of the unrecognized token 'Ver' in the literal 'ChrW(13) &amp; ChrW(10) &amp; " Ver  : "'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowServerInformationToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="302">Method 'Form11.ShowServerInformationToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'FileSystemProxy.WriteAllText(String, String, Boolean)'. Retrieve the following string(s) from a resource table instead: "Hardware information = S".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form11.vb" Line="346">Method 'Form11.SToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'FileSystemProxy.WriteAllText(String, String, Boolean)'. Retrieve the following string(s) from a resource table instead: "------{0} = S".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form12" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ClsButtonBlue1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="281">In method 'Form12.ClsButtonBlue1_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'o' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form12_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form12.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="103">'Form12.Form12_Load(Object, EventArgs)' calls 'Form12.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="aa1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="109">'Form12.Form12_Load(Object, EventArgs)' declares a variable, 'aa1', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="110">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form12.Form12_Load(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="324">Method 'Form12.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "_____".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="180">Method 'Form12.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Record and run".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="344">Method 'Form12.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Microphone".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="77">Method 'Form12.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "..".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="132">Method 'Form12.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "..".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="191">Method 'Form12.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Listen to audio".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="241">Method 'Form12.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Send audio".</Issue>
            </Message>
            <Message Id="comet.ThemeControl154.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="229">Method 'Form12.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ThemeControl154.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Send Audio".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.Designer.vb" Line="320">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form12.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#koko()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="156">'Form12.koko()' has a cyclomatic complexity of 41. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="159">In method 'Form12.koko()', call System.IDisposable.Dispose on object 'MIFILESTREAM' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="koko" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="156">Correct the casing of 'koko' in member name 'Form12.koko()' by changing it to 'Koko'.</Issue>
            </Message>
            <Message Id="AUDIOFORMAT" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="171">'Form12.koko()' declares a variable, 'AUDIOFORMAT', of type 'Short', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="BITPERSAMPLE" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="176">'Form12.koko()' declares a variable, 'BITPERSAMPLE', of type 'Short', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="BLOCKALIGN" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="175">'Form12.koko()' declares a variable, 'BLOCKALIGN', of type 'Short', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="BYTERATE" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="174">'Form12.koko()' declares a variable, 'BYTERATE', of type 'Integer', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="CHUNKSIZE" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="165">'Form12.koko()' declares a variable, 'CHUNKSIZE', of type 'Integer', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="NUMCHANNELS" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="172">'Form12.koko()' declares a variable, 'NUMCHANNELS', of type 'Short', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="SAMPLERATE" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="173">'Form12.koko()' declares a variable, 'SAMPLERATE', of type 'Integer', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="STRCHUNKID" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="164">'Form12.koko()' declares a variable, 'STRCHUNKID', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="STRFORMAT" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="167">'Form12.koko()' declares a variable, 'STRFORMAT', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="STRSUBCHUNK1ID" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="169">'Form12.koko()' declares a variable, 'STRSUBCHUNK1ID', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="STRSUBCHUNK2ID" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="178">'Form12.koko()' declares a variable, 'STRSUBCHUNK2ID', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="SUBCHUNK1SIZE" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="170">'Form12.koko()' declares a variable, 'SUBCHUNK1SIZE', of type 'Integer', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="162">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form12.koko()' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#mciSendString(System.String&amp;,System.String&amp;,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form12.mciSendString(ByRef String, ByRef String, Integer, Integer)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'Form12.mciSendString(ByRef String, ByRef String, Integer, Integer)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox0_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="272">In method 'Form12.PictureBox0_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 's' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="273">Method 'Form12.PictureBox0_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "|*.wav".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="125">Method 'Form12.PictureBox1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Recording...".</Issue>
            </Message>
            <Message Id="comet.Form12.mciSendString(System.String@,System.String@,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="123">'Form12.PictureBox1_Click(Object, EventArgs)' calls 'Form12.mciSendString(ByRef String, ByRef String, Integer, Integer)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="124">'Form12.PictureBox1_Click(Object, EventArgs)' calls 'Form12.mciSendString(ByRef String, ByRef String, Integer, Integer)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="135">Method 'Form12.PictureBox2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Stopped...".</Issue>
            </Message>
            <Message Id="comet.Form12.mciSendString(System.String@,System.String@,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="133">'Form12.PictureBox2_Click(Object, EventArgs)' calls 'Form12.mciSendString(ByRef String, ByRef String, Integer, Integer)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="134">'Form12.PictureBox2_Click(Object, EventArgs)' calls 'Form12.mciSendString(ByRef String, ByRef String, Integer, Integer)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox5_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="49">Method 'Form12.PictureBox5_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Recording ...".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox6_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="72">Method 'Form12.PictureBox6_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Running".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ListView+ListViewItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="76">Method 'Form12.PictureBox6_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "Stop |Recording|".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox7_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="143">Method 'Form12.PictureBox7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Playing...".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox8_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="150">Method 'Form12.PictureBox8_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Send...".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PINTA()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="215">'Form12.PINTA()' has a cyclomatic complexity of 57. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="PINTA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="215">Correct the casing of 'PINTA' in member name 'Form12.PINTA()' by changing it to 'Pinta'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form12.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form12.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form12.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form12.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ListView+ListViewItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="19">Method 'Form12.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "Start |Recording| &lt; ,  &gt;".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer3_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form12.vb" Line="206">Method 'Form12.Timer3_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Recording ...".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form12.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form13" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="10">Method 'Form13.Button1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cmd".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="27">Method 'Form13.Button1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Active attack".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="36">Method 'Form13.Button1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Active attack".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ListView+ListViewItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="24">Method 'Form13.Button1_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "C:\Windows\System32\PING.EXE".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="33">Method 'Form13.Button1_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "HTTP\".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="67">Method 'Form13.Button2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "The attack is not active".</Issue>
            </Message>
            <Message Id="speed" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="64">'Form13.Button2_Click(Object, EventArgs)' declares a variable, 'speed', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="w" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="63">'Form13.Button2_Click(Object, EventArgs)' declares a variable, 'w', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form13_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form13.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="74">'Form13.Form13_Load(Object, EventArgs)' calls 'Form13.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="75">'Form13.Form13_Load(Object, EventArgs)' calls 'Form13.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="168">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Case of attack".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="189">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "The number of attacks".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="116">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cmd".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="204">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Denial of Service ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="89">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Denial of Service".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="100">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Speed".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="78">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "500".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="67">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "www.xxxxxxxxxx.com".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="55">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "On Attack".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="130">Method 'Form13.InitializeComponent()' passes a literal string as parameter 'caption' of a call to 'ToolTip.SetToolTip(Control, String)'. Retrieve the following string(s) from a resource table instead: "off Attack".</Issue>
            </Message>
            <Message Id="xxxxxxxxxx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.Designer.vb" Line="67">Correct the spelling of the unrecognized token 'xxxxxxxxxx' in the literal '"www.xxxxxxxxxx.com"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form13.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form13.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form13.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form13.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ListView+ListViewItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form13.vb" Line="51">Method 'Form13.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "HTTP\".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form14" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form14.Designer.vb" Line="56">Method 'Form14.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "......".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form14.vb" Line="7">Method 'Form14.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " &amp; Download".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form15" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form15.Designer.vb" Line="66">Method 'Form15.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Open".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form15.Designer.vb" Line="82">Method 'Form15.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form15.Designer.vb" Line="55">Method 'Form15.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Open URL ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form15.vb" Line="12">Method 'Form15.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Open URL ( ,  )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form15.vb" Line="10">Method 'Form15.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Open URL ( , ?,  )".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form16" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#bw" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bw" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'bw' in member name 'Form16.bw()' by changing it to 'BW'.</Issue>
            </Message>
            <Message Id="bw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bw' in member name 'Form16.bw()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#f" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form16.f' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="f" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'Form16.f'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form16_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form16.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.vb" Line="28">'Form16.Form16_Load(Object, EventArgs)' calls 'Form16.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="188">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Installed".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="178">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="193">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Size".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="198">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Version".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="183">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "publisher".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="130">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "GetInstalled Programs ...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="144">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="213">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Installed Programs ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="100">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="110">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="152">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="70">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Refresh ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="64">Method 'Form16.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Remove".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="81">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form16.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="GetInstalled" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.Designer.vb" Line="130">Correct the spelling of the unrecognized token 'GetInstalled' in the literal '"GetInstalled Programs ..."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form16.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form16.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form16.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form16.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer3_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.vb" Line="87">Method 'Form16.Timer3_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Installed(, )".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form16.vb" Line="86">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form16.Timer3_Tick(Object, EventArgs)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form16.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form17" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form17.Designer.vb" Line="88">Method 'Form17.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form17.Designer.vb" Line="53">Method 'Form17.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Enter Direct URL".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form17.Designer.vb" Line="74">Method 'Form17.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Enter the random file name Example : Server.exe".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form17.Designer.vb" Line="63">Method 'Form17.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Server.exe".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form17.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form18" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form18.Designer.vb" Line="65">Method 'Form18.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Rename".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form18.Designer.vb" Line="55">Method 'Form18.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "New Name".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form19" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form19.vb" Line="60">In method 'Form19.Button1_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'New SaveFileDialog()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form19.vb" Line="60">Method 'Form19.Button1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "(*.rtf)|*.rtf".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form19_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form19.vb" Line="5">'Form19.Form19_Load(Object, EventArgs)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form19.vb" Line="40">Method 'Form19.Form19_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Erorr".</Issue>
            </Message>
            <Message Id="Erorr" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form19.vb" Line="40">Correct the spelling of the unrecognized token 'Erorr' in the literal '"Erorr"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form19.Designer.vb" Line="127">Method 'Form19.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Comments".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form19.vb" Line="74">Method 'Form19.PictureBox1_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'FileSystemProxy.WriteAllText(String, String, Boolean)'. Retrieve the following string(s) from a resource table instead: "Star".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ClsButtonBlue1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.vb" Line="36">Method 'Form2.ClsButtonBlue1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "The Case of The Port |- Connected To The Following Port : ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.vb" Line="31">Modify 'Form2.ClsButtonBlue1_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Decimal.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.vb" Line="36">Because the behavior of 'Decimal.ToString()' could vary based on the current user's locale settings, replace this call in 'Form2.ClsButtonBlue1_Click(Object, EventArgs)' with a call to 'Decimal.ToString(IFormatProvider)'. If the result of 'Decimal.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClsButtonOrange1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.vb" Line="47">Method 'Form2.ClsButtonOrange1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Listening On Port : ----".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.Designer.vb" Line="44">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Auto Liestn".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.Designer.vb" Line="76">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1122".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.Designer.vb" Line="90">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "port".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.Designer.vb" Line="139">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Port Settings".</Issue>
            </Message>
            <Message Id="comet.ThemeControl154.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.Designer.vb" Line="102">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ThemeControl154.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Exit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.Designer.vb" Line="115">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ThemeControl154.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
            </Message>
            <Message Id="Liestn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form2.Designer.vb" Line="44">Correct the spelling of the unrecognized token 'Liestn' in the literal '"Auto Liestn"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form20" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="54">In method 'Form20.Button1_Click(Object, EventArgs)', object 'myWriter' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'myWriter' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="31">In method 'Form20.Button2_Click(Object, EventArgs)', object 'myWriter' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'myWriter' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ComboBox2_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="100">Method 'Form20.ComboBox2_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Day of the month:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="107">Method 'Form20.ComboBox2_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "In the days running:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="90">Method 'Form20.ComboBox2_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Minutes pm:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="95">Method 'Form20.ComboBox2_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Time:".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="99">Method 'Form20.ComboBox2_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "D 1 ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="106">Method 'Form20.ComboBox2_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "D MON,TUE,WED,THU,FRI ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="94">Method 'Form20.ComboBox2_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ST 09:39".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="89">Method 'Form20.ComboBox2_SelectedIndexChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "mo 1".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form20_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form20.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.vb" Line="14">'Form20.Form20_Load(Object, EventArgs)' calls 'Form20.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="250">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Task Name:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="255">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Task Path:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="260">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Time:".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="222">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Every minute".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="274">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Scheduled Tasks".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="92">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Task Name:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="103">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Task Path:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="127">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Time:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="194">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Time:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="183">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "tasks:".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="116">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "C:\Users\?\AppData\Server.exe".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="81">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "LOC".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="207">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ST 09:39".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="140">Method 'Form20.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "mo 1".</Issue>
            </Message>
            <Message Id="AppData" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form20.Designer.vb" Line="116">Correct the spelling of the unrecognized token 'AppData' in the literal '"C:\Users\?\AppData\Server.exe"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form20.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form20.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form20.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form20.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form21" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Form21_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="15">'Form21.Form21_Load(Object, EventArgs)' has a cyclomatic complexity of 29. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.PictureBox.set_ImageLocation(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="19">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\1.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="28">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\10.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="29">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\11.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="30">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\12.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="31">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\13.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="32">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\14.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="33">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\15.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="34">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\16.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="35">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\17.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="36">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\18.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="20">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\2.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="21">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\3.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="22">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\4.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="23">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\5.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="24">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\6.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="25">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\7.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="26">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\8.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="27">Method 'Form21.Form21_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\ico\9.ico".</Issue>
            </Message>
            <Message Id="ico" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="19">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\1.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="19">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\1.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="28">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\10.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="28">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\10.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="29">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\11.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="29">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\11.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="30">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\12.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="30">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\12.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="31">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\13.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="31">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\13.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="32">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\14.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="32">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\14.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="33">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\15.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="33">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\15.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="34">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\16.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="34">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\16.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="35">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\17.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="35">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\17.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="36">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\18.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="36">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\18.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="20">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\2.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="20">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\2.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="21">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\3.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="21">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\3.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="22">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\4.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="22">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\4.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="23">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\5.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="23">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\5.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="24">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\6.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="24">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\6.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="25">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\7.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="25">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\7.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="26">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\8.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="26">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\8.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="27">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\9.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.vb" Line="27">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\ico\9.ico"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form21.Designer.vb" Line="294">Method 'Form21.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ICO".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form22" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form22.Designer.vb" Line="148">Method 'Form22.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Msg Box".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form22.Designer.vb" Line="93">Method 'Form22.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Text".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form22.Designer.vb" Line="103">Method 'Form22.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Text".</Issue>
            </Message>
            <Message Id="Msg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form22.Designer.vb" Line="148">Correct the spelling of the unrecognized token 'Msg' in the literal '"Msg Box"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form22.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form23" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form23.Designer.vb" Line="66">Method 'Form23.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Implementation of official".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form23.Designer.vb" Line="52">Method 'Form23.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Implementation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form23.Designer.vb" Line="94">Method 'Form23.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Kill process".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form23.Designer.vb" Line="80">Method 'Form23.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Running process".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form23.Designer.vb" Line="113">Method 'Form23.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "process".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form24" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form24.Designer.vb" Line="45">Method 'Form24.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form24.Designer.vb" Line="69">Method 'Form24.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Maximized".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form24.Designer.vb" Line="81">Method 'Form24.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Minimized".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form24.Designer.vb" Line="57">Method 'Form24.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Normal".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form24.Designer.vb" Line="93">Method 'Form24.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form24.Designer.vb" Line="129">Method 'Form24.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ".dll".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form24.Designer.vb" Line="116">Method 'Form24.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Notepad".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form24.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form25" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form25.Designer.vb" Line="36">Method 'Form25.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Send".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form25.Designer.vb" Line="60">Method 'Form25.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Close Process".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form25.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form26" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Form26_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form26.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.vb" Line="10">'Form26.Form26_Load(Object, EventArgs)' calls 'Form26.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="121">Method 'Form26.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Detection".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="131">Method 'Form26.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Handle".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="116">Method 'Form26.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Port status".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="126">Method 'Form26.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Value".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="91">Method 'Form26.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "127.0.0.1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="69">Method 'Form26.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Scan".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="149">Method 'Form26.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Scan Ports".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="79">Method 'Form26.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "80".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.Designer.vb" Line="137">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form26.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form26.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form26.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form26.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form26.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer2_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Decimal.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form26.vb" Line="61">Because the behavior of 'Decimal.ToString()' could vary based on the current user's locale settings, replace this call in 'Form26.Timer2_Tick(Object, EventArgs)' with a call to 'Decimal.ToString(IFormatProvider)'. If the result of 'Decimal.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form26.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form27" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AnimateWindow(System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'Form27.AnimateWindow(Integer, Integer, Integer)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form27.AnimateWindow(Integer, Integer, Integer)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hwnd' of P/Invoke 'Form27.AnimateWindow(Integer, Integer, Integer)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'Integer'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'Form27.AnimateWindow(Integer, Integer, Integer)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backconnection_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.vb" Line="30">Method 'Form27.backconnection_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#booca()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.vb" Line="85">'Form27.booca()' has a cyclomatic complexity of 242. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.vb" Line="85">'Form27.booca()' has 242 local variables, 241 of which were generated by the compiler. Refactor 'Form27.booca()' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.vb" Line="85">'Form27.booca()' has a maintainability index of 0. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message Id="booca" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.vb" Line="85">Correct the casing of 'booca' in member name 'Form27.booca()' by changing it to 'Booca'.</Issue>
            </Message>
            <Message Id="booca" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.vb" Line="85">Correct the spelling of 'booca' in member name 'Form27.booca()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="141">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Country_".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="165">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ID :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="512">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "IP:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="89">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="129">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label2".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="117">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label3".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="77">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label4".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="65">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label5".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="101">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "OS :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="153">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "User :".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="173">Method 'Form27.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="105">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form27.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.Designer.vb" Line="490">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form27.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form27.vb" Line="49">Modify 'Form27.Timer1_Tick(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form28" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="228">Method 'Form28.Button2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="243">Method 'Form28.Button2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="235">Method 'Form28.Button2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="349">Method 'Form28.Button3_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="354">Method 'Form28.Button3_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="357">Method 'Form28.Button3_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="341">Method 'Form28.Button4_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="334">Method 'Form28.Button4_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="344">Method 'Form28.Button4_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Cap_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="46">Method 'Form28.Cap_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="45">Method 'Form28.Cap_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1050; 590".</Issue>
            </Message>
            <Message Id="comet.Form28.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="34">'Form28.Cap_Load(Object, EventArgs)' calls 'Form28.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Cap_Move(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="502">Method 'Form28.Cap_Move(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="507">Method 'Form28.Cap_Move(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="510">Method 'Form28.Cap_Move(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckBox3_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="551">In method 'Form28.CheckBox3_CheckedChanged(Object, EventArgs)', call System.IDisposable.Dispose on object 'fx' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="554">Method 'Form28.CheckBox3_CheckedChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  - ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#extension" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form28.extension' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#F" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form28.F' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="F" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'Form28.F'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form28_SizeChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="668">Method 'Form28.Form28_SizeChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="673">Method 'Form28.Form28_SizeChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="676">Method 'Form28.Form28_SizeChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAsyncKeyState(System.Windows.Forms.Keys)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Al" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Form28.GetAsyncKeyState(Keys)', correct the casing of 'Al' in parameter name 'AlBrazele' by changing it to 'al'.</Issue>
            </Message>
            <Message Id="Brazele" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form28.GetAsyncKeyState(Keys)', correct the spelling of 'Brazele' in parameter name 'AlBrazele' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form28.GetAsyncKeyState(Keys)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form28.GetAsyncKeyState(Keys)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="334">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="212">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="482">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="184">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Keyboard".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="227">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Mouse + Key(S)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="240">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Show Lines".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="264">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="832">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Remote Desktop ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="421">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "####".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="471">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "%".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="367">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "HD".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.LinkLabel.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="383">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ".".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="778">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Drop files here".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TreeNode.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="63">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Block".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="31">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Close".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="57">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Cursor Hide".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="58">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Cursor Show".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="72">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Empty the".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="36">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Hide Clock".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="33">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Hide Task".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="42">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Hide Taskbar".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="66">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Mute".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="61">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Normal".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="39">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "OFF".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="40">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "ON".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="30">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Open".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="52">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Registry Disable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="51">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Registry Enable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="60">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Reverse".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="37">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Show Clock".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="43">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Show Taskbar".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="28">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Show".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="55">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Sys Disable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="54">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Sys Enable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="49">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Task Disable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="48">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Task Enable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="69">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Turn off".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="70">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Turn on".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="64">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Unblock".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="67">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "Unmute".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="46">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "cmd Disable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="45">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "cmd Enable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="34">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "show Task".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="27">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, Integer, Integer)'. Retrieve the following string(s) from a resource table instead: "Hide".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="32">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "CD-ROM".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="38">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Clock".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="59">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Cursor".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="29">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Disktop  Icons".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="73">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Empty the Recycle Bin".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="71">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Monitor".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="62">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Mouse".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="65">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Mouse/Keyboard".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="53">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Registry".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="68">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Sound".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="56">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "System Restore".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="50">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Task Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="35">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Taskbar icons".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="44">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Taskbar".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="41">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "Windows Update".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="47">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String, TreeNode())'. Retrieve the following string(s) from a resource table instead: "cmd".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TreeNode.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="690">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Block".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="607">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "CD-ROM".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="623">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Clock".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="605">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Close".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="674">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cursor Hide".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="677">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cursor Show".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="679">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cursor".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="599">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Disktop  Icons".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="716">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Empty the Recycle Bin".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="714">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Empty the".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="618">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide Clock".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="610">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide Task".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="634">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide Taskbar".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="594">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="711">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Monitor".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="687">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Mouse".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="695">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Mouse/Keyboard".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="698">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Mute".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="685">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Normal".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="626">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "OFF".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="629">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ON".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="602">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Open".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="661">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Registry Disable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="658">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Registry Enable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="663">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Registry".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="682">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Reverse".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="621">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Show Clock".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="637">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Show Taskbar".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="597">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Show".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="703">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Sound".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="669">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Sys Disable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="666">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Sys Enable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="671">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "System Restore".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="653">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Task Disable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="650">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Task Enable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="655">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Task Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="615">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Taskbar icons".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="639">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Taskbar".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="706">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Turn off".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="709">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Turn on".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="693">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Unblock".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="701">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Unmute".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="631">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Windows Update".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="645">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "cmd Disable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="642">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "cmd Enable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="647">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "cmd".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="613">Method 'Form28.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "show Task".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="731">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form28.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="736">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form28.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="Disktop" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="29">Correct the spelling of the unrecognized token 'Disktop' in the literal '"Disktop  Icons"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.Designer.vb" Line="599">Correct the spelling of the unrecognized token 'Disktop' in the literal '"Disktop  Icons"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="600">Method 'Form28.PictureBox4_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "cmd".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox5_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="613">Method 'Form28.PictureBox5_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "regedit".</Issue>
            </Message>
            <Message Id="regedit" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="613">Correct the spelling of the unrecognized token 'regedit' in the literal '"regedit"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox6_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="618">Method 'Form28.PictureBox6_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "taskmgr".</Issue>
            </Message>
            <Message Id="taskmgr" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="618">Correct the spelling of the unrecognized token 'taskmgr' in the literal '"taskmgr"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox7_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="623">Method 'Form28.PictureBox7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "msinfo32".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox8_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="628">Method 'Form28.PictureBox8_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StikyNot".</Issue>
            </Message>
            <Message Id="StikyNot" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="628">Correct the spelling of the unrecognized token 'StikyNot' in the literal '"StikyNot"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox9_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="633">Method 'Form28.PictureBox9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "DisplaySwitch".</Issue>
            </Message>
            <Message Id="DisplaySwitch" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="633">Correct the spelling of the unrecognized token 'DisplaySwitch' in the literal '"DisplaySwitch"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PktToImage(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="67">In method 'Form28.PktToImage(Byte())', call System.IDisposable.Dispose on object 'Q' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.LinkLabel.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="71">Method 'Form28.PktToImage(Byte())' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Size: ,  (Case:Active) fps".</Issue>
            </Message>
            <Message Id="BY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="49">In member 'Form28.PktToImage(Byte())', correct the casing of 'BY' in parameter name 'BY' by changing it to 'by'.</Issue>
            </Message>
            <Message Id="Pkt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="49">Correct the spelling of 'Pkt' in member name 'Form28.PktToImage(Byte())' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="71">In externally visible method 'Form28.PktToImage(Byte())', validate parameter 'BY' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QZ(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="96">'Form28.QZ(Integer)' has a cyclomatic complexity of 85. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="q" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="96">In method 'Form28.QZ(Integer)', consider providing a more meaningful name than parameter name 'q'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="147">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form28.QZ(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="147">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form28.QZ(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="148">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form28.QZ(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="148">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form28.QZ(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#R_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="736">Method 'Form28.R_TextChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Drop files here".</Issue>
            </Message>
            <Message Id="aa1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="721">'Form28.R_TextChanged(Object, EventArgs)' declares a variable, 'aa1', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="722">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form28.R_TextChanged(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form28.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form28.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form28.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form28.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="528">Method 'Form28.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "  ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="521">Method 'Form28.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="531">Method 'Form28.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrackBar1_Scroll(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="257">'Form28.TrackBar1_Scroll(Object, EventArgs)' has a cyclomatic complexity of 74. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="324">Method 'Form28.TrackBar1_Scroll(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1050; 590".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="320">Method 'Form28.TrackBar1_Scroll(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1366; 768".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TreeView1_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="366">'Form28.TreeView1_AfterSelect(Object, TreeViewEventArgs)' has a cyclomatic complexity of 105. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="366">'Form28.TreeView1_AfterSelect(Object, TreeViewEventArgs)' has 94 local variables, 73 of which were generated by the compiler. Refactor 'Form28.TreeView1_AfterSelect(Object, TreeViewEventArgs)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form28.vb" Line="366">'Form28.TreeView1_AfterSelect(Object, TreeViewEventArgs)' has a maintainability index of 14. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txtextensions" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form28.txtextensions' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UODNNXMATTYW" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form28.UODNNXMATTYW' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form28.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form29" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="71">Method 'Form29.Button1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "(Hacker):".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="79">'Form29.Button2_Click(Object, EventArgs)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="81">In method 'Form29.Button2_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'o' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="91">Method 'Form29.Button2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "(Hacker):, --&gt;send -&gt; ,  |Time : ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Chatt_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="14">Method 'Form29.Chatt_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Chat Succeeded Connected ...".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.Designer.vb" Line="145">Method 'Form29.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "89".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.Designer.vb" Line="134">Method 'Form29.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Letters[0]".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.Designer.vb" Line="183">Method 'Form29.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "[ Name ] is writing ...".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.Designer.vb" Line="188">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form29.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Recv_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="23">'Form29.Recv_TextChanged(Object, EventArgs)' has a cyclomatic complexity of 30. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sendbox_KeyPress1(System.Object,System.Windows.Forms.KeyPressEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="58">Method 'Form29.Sendbox_KeyPress1(Object, KeyPressEventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "(Hacker):".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sendbox_TextChanged_1(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="103">Method 'Form29.Sendbox_TextChanged_1(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Letters[x]".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="112">Method 'Form29.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\.exe".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form29.vb" Line="125">Method 'Form29.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\.exe".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form29.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form3" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="18">'Form3.Button2_Click(Object, EventArgs)' has a cyclomatic complexity of 83. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="18">'Form3.Button2_Click(Object, EventArgs)' has 103 local variables, 84 of which were generated by the compiler. Refactor 'Form3.Button2_Click(Object, EventArgs)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="18">'Form3.Button2_Click(Object, EventArgs)' has a maintainability index of 14. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="242">In method 'Form3.Button2_Click(Object, EventArgs)', object 'App' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'App' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="192">In method 'Form3.Button2_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'Compiler' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="139">In method 'Form3.Button2_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'sfd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="141">Method 'Form3.Button2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "(.exe) |*.exe".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="255">Method 'Form3.Button2_Click(Object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(String, String, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Comet v 0.1.4.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="255">Method 'Form3.Button2_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(String, String, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Host : , " &amp; ChrW(13) &amp; ChrW(10) &amp; "Port : , " &amp; ChrW(13) &amp; ChrW(10) &amp; "File : ...".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="218">Modify 'Form3.Button2_Click(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Compiler" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="192">'Form3.Button2_Click(Object, EventArgs)' declares a variable, 'Compiler', of type 'VBCodeProvider', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="cResults" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="18">'Form3.Button2_Click(Object, EventArgs)' declares a variable, 'cResults', of type 'CompilerResults', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="255">Change 'Form3.Button2_Click(Object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="Microsoft.VisualBasic.VBCodeProvider.#.ctor(System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="MemberReferencesMember" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="192">Member 'Form3.Button2_Click(Object, EventArgs)' uses member 'VBCodeProvider.New(IDictionary(Of String, String))'. Because this member was introduced in .NET Framework 2.0 Service Pack 1, which was not included in the project's target framework, .NET Framework 2.0, your application may fail to run on systems without this service pack installed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckBox29_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="783">Method 'Form3.CheckBox29_CheckedChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "C:\Folder".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckBox30_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="796">Method 'Form3.CheckBox30_CheckedChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Every day".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="793">Method 'Form3.CheckBox30_CheckedChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Every minute".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="795">Method 'Form3.CheckBox30_CheckedChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ST 09:39".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="792">Method 'Form3.CheckBox30_CheckedChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "mo 1".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1373">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2095">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "64 Bit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2082">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "86 Bit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1728">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti Kill Server".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1669">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-.NET Reflector ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1936">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-AVG".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1897">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-AntiLogger".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1858">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-ApateDNS".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1871">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-Avira".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1793">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-Cports".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1656">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-ESET".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1949">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-IPBlocker".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1962">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-Keyscrambler".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1910">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-Malwarebytes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1884">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-Ollydbg".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1780">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-Process Explorer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1975">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-Process Hacker".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1845">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-SbieCtrl".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1754">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-SpeedGear".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1923">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-SpyTheSpy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1741">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-Wireshark".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1806">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti-X-NetStat".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1159">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Apllication Data Folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1819">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Block VirusTotal".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="352">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Build Server".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="608">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "CheckBox3".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="644">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "CheckBox34".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="339">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy To Folder Startup".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="683">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="733">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File compression".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="257">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide After Run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2183">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "If the site is run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2057">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "If there is a picture on  desktop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="904">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Loop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="269">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Melt After Run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1145">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "None".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="280">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Persistence".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1702">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run After((".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="246">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run sleep".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="290">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1715">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Select All".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="328">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Tasks".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1767">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "USB Spread / exe".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1832">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "USB Spread / lnk".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="627">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "dta".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="930">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "new Folder".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="719">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1280">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\...".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2199">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Create Server".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.GroupBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="657">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'GroupBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy Server to Temp".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="365">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'GroupBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Directory Server".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2015">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " Sleep (1000=1s) ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1691">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "))Startups".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1385">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "BSOD".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="618">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Contact Settings".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="813">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "DNS Address :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="382">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Directory :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1117">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "EXE Name        :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="890">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Every minute".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1105">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Folder Name   :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1408">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide After Run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="787">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ID :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1522">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Icon".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="839">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Install Scheduled Tasks".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1214">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Install Server".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1041">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Key :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1510">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label23".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1430">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Melt After Run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1485">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Mutex - Persistence".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1397">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Mutex :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1235">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name - Startup".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="666">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1441">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Persistence".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="775">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Port :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="979">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Scheduled Tasks".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1193">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Startup".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="942">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Task Path".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2139">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\\\\\".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2171">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\\\\\".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2106">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "windows Xp - 7 - 8 - 9 -10".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.LinkLabel.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="499">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " Extra".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="527">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Anti's and Spread".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="440">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Default Settings".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="303">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Extra Install".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1560">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Remove ICO".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1535">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Select ICO".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="470">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Startup installation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="554">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'LinkLabel.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "if".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TabPage.set_ImageKey(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="592">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TabPage.ImageKey.Set(String)'. Retrieve the following string(s) from a resource table instead: "Misc-Settings-icon.png".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TabPage.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="599">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Install Options".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2128">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ".png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2027">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="801">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1122".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="828">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "127.0.0.1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1350">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1DC0Z5T8L9-1DC0Z5T8L9-1DC0Z5T8L9".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1681">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "5".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="968">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "C:\Users\?\AppData\Server.exe".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1172">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Comet\Folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="674">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Dan".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1079">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1053">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Google Chrome".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="763">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hacked".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="955">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1092">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Server.exe".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2161">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "YouTube - Google Chrome".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="992">Method 'Form3.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "mo 1".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="391">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form3.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="395">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form3.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="399">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form3.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="403">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form3.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="688">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form3.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="Anti-AntiLogger" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1897">Correct the spelling of the unrecognized token 'Anti-AntiLogger' in the literal '"Anti-AntiLogger"'.</Issue>
            </Message>
            <Message Id="Anti-ApateDNS" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1858">Correct the spelling of the unrecognized token 'Anti-ApateDNS' in the literal '"Anti-ApateDNS"'.</Issue>
            </Message>
            <Message Id="Anti-Cports" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1793">Correct the spelling of the unrecognized token 'Anti-Cports' in the literal '"Anti-Cports"'.</Issue>
            </Message>
            <Message Id="Anti-IPBlocker" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1949">Correct the spelling of the unrecognized token 'Anti-IPBlocker' in the literal '"Anti-IPBlocker"'.</Issue>
            </Message>
            <Message Id="Anti-Keyscrambler" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1962">Correct the spelling of the unrecognized token 'Anti-Keyscrambler' in the literal '"Anti-Keyscrambler"'.</Issue>
            </Message>
            <Message Id="Anti-Malwarebytes" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1910">Correct the spelling of the unrecognized token 'Anti-Malwarebytes' in the literal '"Anti-Malwarebytes"'.</Issue>
            </Message>
            <Message Id="Anti-Ollydbg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1884">Correct the spelling of the unrecognized token 'Anti-Ollydbg' in the literal '"Anti-Ollydbg"'.</Issue>
            </Message>
            <Message Id="Anti-SbieCtrl" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1845">Correct the spelling of the unrecognized token 'Anti-SbieCtrl' in the literal '"Anti-SbieCtrl"'.</Issue>
            </Message>
            <Message Id="Anti-SpeedGear" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1754">Correct the spelling of the unrecognized token 'Anti-SpeedGear' in the literal '"Anti-SpeedGear"'.</Issue>
            </Message>
            <Message Id="Anti-SpyTheSpy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1923">Correct the spelling of the unrecognized token 'Anti-SpyTheSpy' in the literal '"Anti-SpyTheSpy"'.</Issue>
            </Message>
            <Message Id="Anti-Wireshark" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1741">Correct the spelling of the unrecognized token 'Anti-Wireshark' in the literal '"Anti-Wireshark"'.</Issue>
            </Message>
            <Message Id="Anti-X-NetStat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1806">Correct the spelling of the unrecognized token 'Anti-X-NetStat' in the literal '"Anti-X-NetStat"'.</Issue>
            </Message>
            <Message Id="Apllication" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1159">Correct the spelling of the unrecognized token 'Apllication' in the literal '"Apllication Data Folder"'.</Issue>
            </Message>
            <Message Id="AppData" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="968">Correct the spelling of the unrecognized token 'AppData' in the literal '"C:\Users\?\AppData\Server.exe"'.</Issue>
            </Message>
            <Message Id="VirusTotal" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1819">Correct the spelling of the unrecognized token 'VirusTotal' in the literal '"Block VirusTotal"'.</Issue>
            </Message>
            <Message Id="Xp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2106">Correct the spelling of the unrecognized token 'Xp' in the literal '"windows Xp - 7 - 8 - 9 -10"'.</Issue>
            </Message>
            <Message Id="dta" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="627">Correct the spelling of the unrecognized token 'dta' in the literal '"dta"'.</Issue>
            </Message>
            <Message Id="lnk" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="1832">Correct the spelling of the unrecognized token 'lnk' in the literal '"USB Spread / lnk"'.</Issue>
            </Message>
            <Message Id="png" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="2128">Correct the spelling of the unrecognized token 'png' in the literal '".png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.Designer.vb" Line="592">Correct the spelling of the unrecognized token 'png' in the literal '"Misc-Settings-icon.png"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LinkLabel3_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="641">In method 'Form3.LinkLabel3_LinkClicked(Object, LinkLabelLinkClickedEventArgs)', call System.IDisposable.Dispose on object 'New OpenFileDialog()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="641">Method 'Form3.LinkLabel3_LinkClicked(Object, LinkLabelLinkClickedEventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "Icon File (*.ico) |*.ico".</Issue>
            </Message>
            <Message Id="ico" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="641">Correct the spelling of the unrecognized token 'ico' in the literal '"Icon File (*.ico) |*.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form3.vb" Line="641">Correct the spelling of the unrecognized token 'ico' in the literal '"Icon File (*.ico) |*.ico"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STUB" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form3.STUB' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#text1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form3.text1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#text2" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form3.text2' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form30" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Aint()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="4">'Form30.Aint()' has a cyclomatic complexity of 31. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.PictureBox.set_ImageLocation(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="9">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\AVG.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="15">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\AhnLab-V3.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="65">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Avast.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="11">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Avira.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="17">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\BitDefender.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="19">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\ByteHero.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="21">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\ClamAV.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="23">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\F-Prot.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="25">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\F-Secure.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="27">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\GData.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="29">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Jiangmin.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="31">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Kaspersky.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="33">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\McAfee.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="7">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\NOD32.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="37">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Norman.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="41">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Panda.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="43">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Prevx.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="47">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\SUPERAntiSpyware.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="45">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Sophos.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="49">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Symantec.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="51">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\TheHacker.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="13">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\Total Security 360.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="53">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\TrendMicro.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="55">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\VBA32.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="61">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\VBA32.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="57">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\VIPRE.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="59">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\ViRobot.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="63">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\VirusBuster.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="35">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\microsoft security essentials.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="39">Method 'Form30.Aint()' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\Anti\nProtect.png".</Issue>
            </Message>
            <Message Id="Aint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="4">Correct the spelling of 'Aint' in member name 'Form30.Aint()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Avast" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="65">Correct the spelling of the unrecognized token 'Avast' in the literal '"IOS\Anti\Avast.png"'.</Issue>
            </Message>
            <Message Id="BitDefender" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="17">Correct the spelling of the unrecognized token 'BitDefender' in the literal '"IOS\Anti\BitDefender.png"'.</Issue>
            </Message>
            <Message Id="ByteHero" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="19">Correct the spelling of the unrecognized token 'ByteHero' in the literal '"IOS\Anti\ByteHero.png"'.</Issue>
            </Message>
            <Message Id="ClamAV" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="21">Correct the spelling of the unrecognized token 'ClamAV' in the literal '"IOS\Anti\ClamAV.png"'.</Issue>
            </Message>
            <Message Id="F-Prot" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="23">Correct the spelling of the unrecognized token 'F-Prot' in the literal '"IOS\Anti\F-Prot.png"'.</Issue>
            </Message>
            <Message Id="GData" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="27">Correct the spelling of the unrecognized token 'GData' in the literal '"IOS\Anti\GData.png"'.</Issue>
            </Message>
            <Message Id="Jiangmin" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="29">Correct the spelling of the unrecognized token 'Jiangmin' in the literal '"IOS\Anti\Jiangmin.png"'.</Issue>
            </Message>
            <Message Id="Prevx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="43">Correct the spelling of the unrecognized token 'Prevx' in the literal '"IOS\Anti\Prevx.png"'.</Issue>
            </Message>
            <Message Id="SUPERAntiSpyware" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="47">Correct the spelling of the unrecognized token 'SUPERAntiSpyware' in the literal '"IOS\Anti\SUPERAntiSpyware.png"'.</Issue>
            </Message>
            <Message Id="TheHacker" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="51">Correct the spelling of the unrecognized token 'TheHacker' in the literal '"IOS\Anti\TheHacker.png"'.</Issue>
            </Message>
            <Message Id="ViRobot" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="59">Correct the spelling of the unrecognized token 'ViRobot' in the literal '"IOS\Anti\ViRobot.png"'.</Issue>
            </Message>
            <Message Id="VirusBuster" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="63">Correct the spelling of the unrecognized token 'VirusBuster' in the literal '"IOS\Anti\VirusBuster.png"'.</Issue>
            </Message>
            <Message Id="nProtect" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="39">Correct the spelling of the unrecognized token 'nProtect' in the literal '"IOS\Anti\nProtect.png"'.</Issue>
            </Message>
            <Message Id="png" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="9">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\AVG.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="15">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\AhnLab-V3.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="65">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Avast.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="11">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Avira.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="17">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\BitDefender.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="19">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\ByteHero.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="21">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\ClamAV.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="23">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\F-Prot.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="25">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\F-Secure.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="27">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\GData.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="29">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Jiangmin.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="31">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Kaspersky.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="33">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\McAfee.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="7">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\NOD32.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="37">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Norman.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="41">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Panda.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="43">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Prevx.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="47">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\SUPERAntiSpyware.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="45">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Sophos.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="49">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Symantec.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="51">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\TheHacker.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="13">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\Total Security 360.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="53">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\TrendMicro.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="55">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\VBA32.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="61">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\VBA32.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="57">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\VIPRE.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="59">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\ViRobot.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="63">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\VirusBuster.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="35">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\microsoft security essentials.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.vb" Line="39">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\Anti\nProtect.png"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="106">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="854">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Information".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="235">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "-------------------------------------------------------------------------------...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="246">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "-------------------------------------------------------------------------------...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="841">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="643">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label10".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="621">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label11".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="599">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label12".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="577">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label13".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="555">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label14".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="533">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label15---".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="511">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label16".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="489">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label17".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="467">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label18".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="445">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label19".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="819">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label2".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="423">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label20".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="401">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label21".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="379">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label22".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="357">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label23".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="335">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label24".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="313">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label25".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="291">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label26".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="269">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label27".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="797">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label3".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="775">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label4".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="753">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label5".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="731">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label6".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="709">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label7".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="687">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label8".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="665">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label9".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="126">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form30.Designer.vb" Line="120">Method 'Form30.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form30.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form31" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button7_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="255">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ء".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="256">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ؤ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="254">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ئ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="248">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ا".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="246">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ب".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="260">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ة".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="249">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ت".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="233">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ث".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="241">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ج".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="240">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ح".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="239">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "خ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="242">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "د".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="257">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ر".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="262">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ز".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="244">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "س".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="243">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ش".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="232">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ص".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="231">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ض".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="253">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ط".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="263">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ظ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="237">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ع".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="236">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "غ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="235">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ف".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="234">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ق".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="252">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ك".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="247">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ل".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="258">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "لا".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="251">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "م".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="250">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ن".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="238">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ه".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="261">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "و".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="259">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ى".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="245">Method 'Form31.Button7_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ي".</Issue>
            </Message>
            <Message Id="لا" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="258">Correct the spelling of the unrecognized token 'لا' in the literal '"لا"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button9_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="306">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "'".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="314">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ",".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="315">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ".".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="316">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "/".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="305">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ";".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="296">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "A".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="311">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "B".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="309">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "C".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="298">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "D".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="286">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "E".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="299">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "F".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="300">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "G".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="301">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "H".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="291">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "I".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="302">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "J".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="303">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "K".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="304">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "L".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="313">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "M".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="312">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "N".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="292">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "O".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="284">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Q".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="287">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "R".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="297">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "S".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="288">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "T".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="290">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "U".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="310">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "V".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="285">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "W".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="308">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "X".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="289">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Y".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="307">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Z".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="294">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "[".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="295">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "]".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="293">Method 'Form31.Button9_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "p".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ColoringSizing(System.Windows.Forms.RichTextBox,System.String,System.Int32,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="8">'Form31.ColoringSizing(RichTextBox, String, Integer, Color)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="Color" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="8">In member 'Form31.ColoringSizing(RichTextBox, String, Integer, Color)', correct the casing of 'Color' in parameter name 'Color' by changing it to 'color'.</Issue>
            </Message>
            <Message Id="RTB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="8">In member 'Form31.ColoringSizing(RichTextBox, String, Integer, Color)', correct the casing of 'RTB' in parameter name 'RTB' by changing it to 'rtb'.</Issue>
            </Message>
            <Message Id="Size" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="8">In member 'Form31.ColoringSizing(RichTextBox, String, Integer, Color)', correct the casing of 'Size' in parameter name 'Size' by changing it to 'size'.</Issue>
            </Message>
            <Message Id="Word" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="8">In member 'Form31.ColoringSizing(RichTextBox, String, Integer, Color)', correct the casing of 'Word' in parameter name 'Word' by changing it to 'word'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="8">The 'this' parameter (or 'Me' in Visual Basic) of 'Form31.ColoringSizing(RichTextBox, String, Integer, Color)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="10">In externally visible method 'Form31.ColoringSizing(RichTextBox, String, Integer, Color)', validate parameter 'RTB' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Getloges(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Getloges" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="29">Correct the spelling of 'Getloges' in member name 'Form31.Getloges(String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="367">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "A".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="356">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Clean".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="334">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "E".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="345">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="379">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="229">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Pull the keyboard ...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="164">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "The Number Of Characters".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="393">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Keylogger  ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TabPage.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="218">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "TabPage1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="286">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "TabPage2".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="249">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="79">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Find Word ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="111">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Clean".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="99">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="105">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Refresh".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="93">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="171">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ToolStripStatusLabel1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="178">Method 'Form31.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ToolStripStatusLabel2".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="149">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form31.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="182">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form31.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="Keylogger" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.Designer.vb" Line="393">Correct the spelling of the unrecognized token 'Keylogger' in the literal '"Keylogger  "'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#insert(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="59">Method 'Form31.insert(String)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(String)'. Retrieve the following string(s) from a resource table instead: " ,  " &amp; ChrW(13) &amp; ChrW(10).</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="39">In member 'Form31.insert(String)', correct the casing of 'T' in parameter name 'T' by changing it to 't'.</Issue>
            </Message>
            <Message Id="insert" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="39">Correct the casing of 'insert' in member name 'Form31.insert(String)' by changing it to 'Insert'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="39">In method 'Form31.insert(String)', consider providing a more meaningful name than parameter name 'T'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="41">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form31.insert(String)' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="41">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'Form31.insert(String)' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="41">In externally visible method 'Form31.insert(String)', validate parameter 'T' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#keylogger_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TabPage.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="136">Method 'Form31.keylogger_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Offline Keylogger".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="137">Method 'Form31.keylogger_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Online Keylogger".</Issue>
            </Message>
            <Message Id="Keylogger" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="136">Correct the spelling of the unrecognized token 'Keylogger' in the literal '"Offline Keylogger"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="137">Correct the spelling of the unrecognized token 'Keylogger' in the literal '"Online Keylogger"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SeveToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="357">In method 'Form31.SeveToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'New SaveFileDialog()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="364">In method 'Form31.SeveToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'New SaveFileDialog()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="357">Method 'Form31.SeveToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "(*.rtf)|*.rtf".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="364">Method 'Form31.SeveToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "(*.rtf)|*.rtf".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#T1_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="155">Method 'Form31.T1_TextChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " / The Number Of Characters[ 0 ]".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form31.vb" Line="156">Method 'Form31.T1_TextChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Line:[ ,  ]".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form31.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form32" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form32.CN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="229">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="234">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Type".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="239">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Value".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="182">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="256">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Regedit  ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="190">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "....".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="121">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "CreateKey".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="78">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="114">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "DeleteKey".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="92">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Edit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="85">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "NewValue".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="99">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Refresh".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="128">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Refresh".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TreeNode.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="27">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "HKEY_CLASSES_ROOT".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="28">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "HKEY_CURRENT_USER".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="29">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "HKEY_LOCAL_MACHINE".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="30">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'text' of a call to 'TreeNode.New(String)'. Retrieve the following string(s) from a resource table instead: "HKEY_USERS".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TreeNode.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="157">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "HKEY_CLASSES_ROOT".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="160">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "HKEY_CURRENT_USER".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="163">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "HKEY_LOCAL_MACHINE".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="166">Method 'Form32.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TreeNode.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "HKEY_USERS".</Issue>
            </Message>
            <Message Id="CreateKey" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="121">Correct the spelling of the unrecognized token 'CreateKey' in the literal '"CreateKey"'.</Issue>
            </Message>
            <Message Id="DeleteKey" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="114">Correct the spelling of the unrecognized token 'DeleteKey' in the literal '"DeleteKey"'.</Issue>
            </Message>
            <Message Id="NewValue" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="85">Correct the spelling of the unrecognized token 'NewValue' in the literal '"NewValue"'.</Issue>
            </Message>
            <Message Id="Regedit" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.Designer.vb" Line="256">Correct the spelling of the unrecognized token 'Regedit' in the literal '"Regedit  "'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NewValueToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="54">In method 'Form32.NewValueToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'gv' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="57">Method 'Form32.NewValueToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="59">Method 'Form32.NewValueToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Value".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reg_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form32.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="92">'Form32.Reg_Load(Object, EventArgs)' calls 'Form32.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="93">'Form32.Reg_Load(Object, EventArgs)' calls 'Form32.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RGLIST_DoubleClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="106">In method 'Form32.RGLIST_DoubleClick(Object, EventArgs)', call System.IDisposable.Dispose on object 'gv' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="112">Modify 'Form32.RGLIST_DoubleClick(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form32.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form32.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form32.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form32.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer2_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="100">Method 'Form32.Timer2_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "The number of keys(, )".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form32.vb" Line="99">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form32.Timer2_Tick(Object, EventArgs)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form32.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form33" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="41">'Form33.Button1_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="47">'Form33.Button1_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="xxx" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="33">'xxx', a variable declared in 'Form33.Button1_Click(Object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="182">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="154">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hidden".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="173">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "OK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="164">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Show".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="273">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Form33".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="222">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Employer:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="85">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Location file:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="200">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Location:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="136">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Size on disk:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="102">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Size:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="119">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "_______________________________________________".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="145">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "_______________________________________________".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.Designer.vb" Line="60">Method 'Form33.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "file type:".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="68">'Form33.Timer1_Tick(Object, EventArgs)' has a cyclomatic complexity of 107. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.PictureBox.set_ImageLocation(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="135">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\Fx.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="93">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\Icon_2.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="96">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\Icon_2.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="114">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\Icon_4.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="117">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\Icon_4.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="120">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\Icon_4.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="123">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\Icon_4.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="126">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\Icon_4.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="129">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\OD.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="132">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\OD.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="99">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\imge_3.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="102">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\imge_3.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="105">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\imge_3.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="108">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\imge_3.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="111">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\imge_3.png".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="83">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\wscript_1.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="86">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\wscript_1.ico".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="89">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'PictureBox.ImageLocation.Set(String)'. Retrieve the following string(s) from a resource table instead: "IOS\sys\wscript_1.ico".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="130">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " MS-DOS" &amp; ChrW(8236) &amp; ChrW(8236) &amp; " " &amp; ChrW(8206) &amp; "(.pif)" &amp; ChrW(8206).</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="136">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "(.folder)" &amp; ChrW(8206).</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="133">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "(.lnk)" &amp; ChrW(8206).</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="137">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Files folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="84">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Microsoft ® Windows Based Script Host".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="87">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Microsoft ® Windows Based Script Host".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="90">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Microsoft ® Windows Based Script Host".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="115">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Notepad".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="118">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Notepad".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="121">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Notepad".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="124">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Notepad".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="127">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Notepad".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="100">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Pictures Windows Viewer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="103">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Pictures Windows Viewer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="106">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Pictures Windows Viewer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="109">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Pictures Windows Viewer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="112">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Pictures Windows Viewer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="94">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "WinRAR archiver".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="97">Method 'Form33.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "WinRAR archiver".</Issue>
            </Message>
            <Message Id="archiver" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="94">Correct the spelling of the unrecognized token 'archiver' in the literal '"WinRAR archiver"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="97">Correct the spelling of the unrecognized token 'archiver' in the literal '"WinRAR archiver"'.</Issue>
            </Message>
            <Message Id="ico" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="83">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\sys\wscript_1.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="86">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\sys\wscript_1.ico"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="89">Correct the spelling of the unrecognized token 'ico' in the literal '"IOS\sys\wscript_1.ico"'.</Issue>
            </Message>
            <Message Id="lnk" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="133">Correct the spelling of the unrecognized token 'lnk' in the literal '"(.lnk)" &amp; ChrW(8206)'.</Issue>
            </Message>
            <Message Id="pif" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="130">Correct the spelling of the unrecognized token 'pif' in the literal '" MS-DOS" &amp; ChrW(8236) &amp; ChrW(8236) &amp; " " &amp; ChrW(8206) &amp; "(.pif)" &amp; ChrW(8206)'.</Issue>
            </Message>
            <Message Id="png" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="135">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\Fx.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="93">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\Icon_2.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="96">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\Icon_2.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="114">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\Icon_4.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="117">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\Icon_4.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="120">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\Icon_4.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="123">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\Icon_4.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="126">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\Icon_4.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="129">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\OD.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="132">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\OD.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="99">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\imge_3.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="102">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\imge_3.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="105">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\imge_3.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="108">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\imge_3.png"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="111">Correct the spelling of the unrecognized token 'png' in the literal '"IOS\sys\imge_3.png"'.</Issue>
            </Message>
            <Message Id="aa1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="73">'Form33.Timer1_Tick(Object, EventArgs)' declares a variable, 'aa1', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form33.vb" Line="74">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form33.Timer1_Tick(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form33.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#yy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form33.yy' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="yy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'yy' in member name 'Form33.yy' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form34" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Form34_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.vb" Line="15">Method 'Form34.Form34_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " / The Number Of Characters[ 0 ]".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.vb" Line="16">Method 'Form34.Form34_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Line:[ ,  ]".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.Designer.vb" Line="49">Method 'Form34.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.Designer.vb" Line="116">Method 'Form34.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Password".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.Designer.vb" Line="58">Method 'Form34.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.Designer.vb" Line="65">Method 'Form34.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.Designer.vb" Line="98">Method 'Form34.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.Designer.vb" Line="104">Method 'Form34.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.vb" Line="31">In method 'Form34.SaveToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'oi' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.vb" Line="32">Method 'Form34.SaveToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "rtf|*.rtf".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.vb" Line="22">Method 'Form34.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " / The Number Of Characters[ 0 ]".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form34.vb" Line="23">Method 'Form34.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Line:[ ,  ]".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form34.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form35" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BackgroundWorker1_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="worker" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="88">'Form35.BackgroundWorker1_DoWork(Object, DoWorkEventArgs)' declares a variable, 'worker', of type 'BackgroundWorker', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bw" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bw" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'bw' in member name 'Form35.bw()' by changing it to 'BW'.</Issue>
            </Message>
            <Message Id="bw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bw' in member name 'Form35.bw()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="248">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Company Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="243">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Creation Date".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="272">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File Description".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="276">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hash".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="228">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ID".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="256">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Language".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="260">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Legal Copyright".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="264">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Legal Trademarks".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="238">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Memory".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="223">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="233">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Path".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="268">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Product Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="252">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Version".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="335">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "GetProcesses ...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="292">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "MenuStrip1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="142">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="357">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Process Manager  ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="195">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="157">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "..".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="150">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="324">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Ascending".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="316">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Descending".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="96">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Kill Process".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="308">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "None".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="341">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Properties".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="84">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Refresh Process".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="90">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Restart Process".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="108">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Resume Process".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="300">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Sort Order".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="102">Method 'Form35.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Suspend Process".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="162">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form35.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="166">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form35.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="GetProcesses" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.Designer.vb" Line="335">Correct the spelling of the unrecognized token 'GetProcesses' in the literal '"GetProcesses ..."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#processmanage_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_ToolTipText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="33">Method 'Form35.processmanage_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.ToolTipText.Set(String)'. Retrieve the following string(s) from a resource table instead: "Auto Update Every ,  Sec.".</Issue>
            </Message>
            <Message Id="comet.Form35.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="19">'Form35.processmanage_Load(Object, EventArgs)' calls 'Form35.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form35.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form35.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form35.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form35.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer2_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="115">'Form35.Timer2_Tick(Object, EventArgs)' has a cyclomatic complexity of 131. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="115">'Form35.Timer2_Tick(Object, EventArgs)' has a maintainability index of 19. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer3_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="221">Method 'Form35.Timer3_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "N [ x ]".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer4_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="318">Method 'Form35.Timer4_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Process(, )".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="317">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form35.Timer4_Tick(Object, EventArgs)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form35.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#yyt()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="263">In method 'Form35.yyt()', call System.IDisposable.Dispose on object 'f' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="290">Method 'Form35.yyt()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "nothing".</Issue>
            </Message>
            <Message Id="yyt" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="258">Correct the casing of 'yyt' in member name 'Form35.yyt()' by changing it to 'Yyt'.</Issue>
            </Message>
            <Message Id="yyt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form35.vb" Line="258">Correct the spelling of 'yyt' in member name 'Form35.yyt()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form36" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#cmd" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form36.cmd' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form36.Designer.vb" Line="102">Method 'Form36.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Windows Command Processor  ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form36.Designer.vb" Line="86">Method 'Form36.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form36.Designer.vb" Line="80">Method 'Form36.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SeveToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form36.vb" Line="119">In method 'Form36.SeveToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'oi' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form36.vb" Line="120">Method 'Form36.SeveToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "rtf|*.rtf".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form36.vb" Line="153">Method 'Form36.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Microsoft Windows [Version 6.1.7601]" &amp; ChrW(13) &amp; ChrW(10) &amp; "Copyright (c) 20...".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form36.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form37" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.Designer.vb" Line="129">Method 'Form37.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.Designer.vb" Line="143">Method 'Form37.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Registry Editor  ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.Designer.vb" Line="103">Method 'Form37.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name _".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.Designer.vb" Line="91">Method 'Form37.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Type _".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.Designer.vb" Line="80">Method 'Form37.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Value ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Path" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form37.Path' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Typ(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Typ" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="8">Correct the spelling of 'Typ' in member name 'Form37.Typ(String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="t" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="8">In method 'Form37.Typ(String)', consider providing a more meaningful name than parameter name 't'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="8">The 'this' parameter (or 'Me' in Visual Basic) of 'Form37.Typ(String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="10">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form37.Typ(String)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="11">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form37.Typ(String)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="14">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form37.Typ(String)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="17">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form37.Typ(String)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="20">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form37.Typ(String)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="23">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form37.Typ(String)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="26">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form37.Typ(String)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form37.vb" Line="10">In externally visible method 'Form37.Typ(String)', validate parameter 't' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form37.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form38" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#bw" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bw" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'bw' in member name 'Form38.bw()' by changing it to 'BW'.</Issue>
            </Message>
            <Message Id="bw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bw' in member name 'Form38.bw()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#f" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form38.f' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="f" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'Form38.f'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fun_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.vb" Line="26">Method 'Form38.fun_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " / The Number Of Characters[ 0 ]".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.vb" Line="27">Method 'Form38.fun_Load(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Line:[ ,  ]".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ComboBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="66">Method 'Form38.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ComboBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "vbs".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="122">Method 'Form38.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="156">Method 'Form38.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Scripting ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="110">Method 'Form38.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "MsgBox(""Hello"")".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="137">Method 'Form38.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " / The Number Of Characters".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="129">Method 'Form38.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Line".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="142">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form38.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="MsgBox" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="110">Correct the spelling of the unrecognized token 'MsgBox' in the literal '"MsgBox(""Hello"")"'.</Issue>
            </Message>
            <Message Id="vbs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.Designer.vb" Line="66">Correct the spelling of the unrecognized token 'vbs' in the literal '"vbs"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#state" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form38.state' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextBox8_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.vb" Line="51">Method 'Form38.TextBox8_TextChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " / The Number Of Characters[ 0 ]".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form38.vb" Line="52">Method 'Form38.TextBox8_TextChanged(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Line:[ ,  ]".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#time" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form38.time' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form38.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form39" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form39.Designer.vb" Line="54">Method 'Form39.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "MenuStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form39.Designer.vb" Line="87">Method 'Form39.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Text Editor".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form39.Designer.vb" Line="73">Method 'Form39.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Exit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form39.Designer.vb" Line="61">Method 'Form39.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form39.Designer.vb" Line="67">Method 'Form39.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pathoftext" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form39.pathoftext' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pathoftext" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pathoftext' in member name 'Form39.pathoftext' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveToolStripMenuItem1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form39.vb" Line="15">'Form39.SaveToolStripMenuItem1_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form39.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#yy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form39.yy' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="yy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'yy' in member name 'Form39.yy' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form4" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="200">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "About".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="74">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "----------------------------------------------------------------------------".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="94">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "----------------------------------------------------------------------------".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="174">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "----------------------------------------------------------------------------".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="84">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "0.1.4.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="135">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "About the program".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="154">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Coder:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="124">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Comet ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="104">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Program name:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="164">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Tee Plow and S C R E A M ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="184">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Thanks to NJ8  And  U A C 0 Đ E R   ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form4.Designer.vb" Line="114">Method 'Form4.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Version:".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form40" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#bw" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bw" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'bw' in member name 'Form40.bw()' by changing it to 'BW'.</Issue>
            </Message>
            <Message Id="bw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bw' in member name 'Form40.bw()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#controllers" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form40.controllers' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#f" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form40.f' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="f" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'Form40.f'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form40_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form40.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.vb" Line="25">'Form40.Form40_Load(Object, EventArgs)' calls 'Form40.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="140">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="145">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Service Type".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="135">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Status".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="157">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "GetService ...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="101">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="170">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Service".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="83">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Refresh".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="77">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="109">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Service".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="71">Method 'Form40.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="50">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form40.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="GetService" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.Designer.vb" Line="157">Correct the spelling of the unrecognized token 'GetService' in the literal '"GetService ..."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#msvc" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form40.msvc' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form40.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form40.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form40.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form40.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer4_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.vb" Line="136">Method 'Form40.Timer4_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Service(, )".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form40.vb" Line="135">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form40.Timer4_Tick(Object, EventArgs)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form40.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form41" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="341">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Activation Site".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="160">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Connected devices in the network".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="211">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Default retrieval".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="136">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Host and port".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="221">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="172">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Server runtime".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="148">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "TCP".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="200">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "To avoid problems, you must change the server name when you set up each server ...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="300">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "new Block".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="352">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "network".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="309">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Block".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="243">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Host".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="232">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Port".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="331">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Replacement Contact".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="320">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Site closed".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TabPage.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="99">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "TabPage1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="190">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "TabPage2".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="279">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TabPage.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "TabPage3".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="264">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "127.0.0.1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="290">Method 'Form41.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "www.xnxx.com".</Issue>
            </Message>
            <Message Id="xnxx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form41.Designer.vb" Line="290">Correct the spelling of the unrecognized token 'xnxx' in the literal '"www.xnxx.com"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form41.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form42" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#bw" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bw" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'bw' in member name 'Form42.bw()' by changing it to 'BW'.</Issue>
            </Message>
            <Message Id="bw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bw' in member name 'Form42.bw()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form42_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form42.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.vb" Line="21">'Form42.Form42_Load(Object, EventArgs)' calls 'Form42.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="68">Method 'Form42.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ActiveWindows".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="131">Method 'Form42.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "GetActiveWindows ...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="106">Method 'Form42.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "StatusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="144">Method 'Form42.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ActiveWindows".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="113">Method 'Form42.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ActiveWindows".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="83">Method 'Form42.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Kill ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="89">Method 'Form42.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Refresh".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="46">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form42.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="ActiveWindows" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="68">Correct the spelling of the unrecognized token 'ActiveWindows' in the literal '"ActiveWindows"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="113">Correct the spelling of the unrecognized token 'ActiveWindows' in the literal '"ActiveWindows"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="144">Correct the spelling of the unrecognized token 'ActiveWindows' in the literal '"ActiveWindows"'.</Issue>
            </Message>
            <Message Id="GetActiveWindows" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.Designer.vb" Line="131">Correct the spelling of the unrecognized token 'GetActiveWindows' in the literal '"GetActiveWindows ..."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form42.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form42.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form42.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form42.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer2_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.vb" Line="77">Method 'Form42.Timer2_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ActiveWindows(, )".</Issue>
            </Message>
            <Message Id="ActiveWindows" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.vb" Line="77">Correct the spelling of the unrecognized token 'ActiveWindows' in the literal '"ActiveWindows("'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form42.vb" Line="76">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form42.Timer2_Tick(Object, EventArgs)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form42.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form43" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form43.Designer.vb" Line="183">Method 'Form43.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Form43".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form43.Designer.vb" Line="125">Method 'Form43.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "%".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form43.Designer.vb" Line="137">Method 'Form43.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form43.Designer.vb" Line="113">Method 'Form43.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "v . 0 .1 .4".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form43.Designer.vb" Line="58">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form43.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form5" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BackToolStripMenuItem1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="84">'Form5.BackToolStripMenuItem1_Click(Object, EventArgs)' has a cyclomatic complexity of 30. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="104">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.BackToolStripMenuItem1_Click(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="105">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.BackToolStripMenuItem1_Click(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="48">'Form5.Button2_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="68">'Form5.Button3_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="58">'Form5.Button4_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button5_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="79">'Form5.Button5_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button6_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="466">'Form5.Button6_Click(Object, EventArgs)' has a cyclomatic complexity of 30. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="492">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.Button6_Click(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="493">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.Button6_Click(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CharacteristicsToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="863">In method 'Form5.CharacteristicsToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'f' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="586">Method 'Form5.CopyToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DestructionBoomToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="624">'Form5.DestructionBoomToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="152">In method 'Form5.DownloadToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ListView+ListViewItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="175">Method 'Form5.DownloadToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "_+ (, ) (Size , )".</Issue>
            </Message>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="169">'Form5.DownloadToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ElseToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="680">'Form5.ElseToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ElseTToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="700">'Form5.ElseTToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form5_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="comet.Form5.SetWindowTheme(System.IntPtr,System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="31">'Form5.Form5_Load(Object, EventArgs)' calls 'Form5.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="32">'Form5.Form5_Load(Object, EventArgs)' calls 'Form5.SetWindowTheme(IntPtr, String, String)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="882">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "C:\".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="864">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Desktop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="916">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "My Documents".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="899">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Startup".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="933">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Temp".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="724">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Downloads".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="626">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="631">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File Size".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="968">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="1010">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File Manger  ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="836">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="702">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Find".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="278">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " Server Tools".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="546">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "(Else)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="226">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Back".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="319">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="329">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cut".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="267">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Decrypt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="349">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="399">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Desktop background".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="997">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Details".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="985">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Display".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="470">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Download".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="309">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Edit Files".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="419">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Empty the Recycle Bin".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="247">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Encrypt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="257">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Encrypt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="369">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hide Folder/File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="956">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "MOID".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="491">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "New Files".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="501">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "New Folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="510">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "New Rtf".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="519">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "New log".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="537">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "New txt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="528">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "New vbs".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="566">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Open Download Folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="216">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Open".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="339">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Paste".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="460">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Play Music Hiden".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="576">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Properties".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="236">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Refresh".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="359">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Rename File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="389">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Ruin File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="440">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run the file as an administrator".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="450">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run the file".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="430">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="288">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Server Copy Hide".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="298">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Server Copy Normal".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="379">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Show Folder/File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="991">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Tile".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="978">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ToolStripDropDownButton1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="480">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Upload".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="556">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "View/Edit Text".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="409">Method 'Form5.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Winrar Compress".</Issue>
            </Message>
            <Message Id="My Documents" TypeName="DoNotHardcodeLocaleSpecificStrings" Category="Microsoft.Globalization" CheckId="CA1302" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="916">If the literal 'My Documents' used in method 'Form5.InitializeComponent()' refers to a special system location, replace it with a call to Environment.GetFolderPath.</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="581">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form5.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="944">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form5.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
            <Message Id="Hiden" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="460">Correct the spelling of the unrecognized token 'Hiden' in the literal '"Play Music Hiden"'.</Issue>
            </Message>
            <Message Id="Winrar" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="409">Correct the spelling of the unrecognized token 'Winrar' in the literal '"Winrar Compress"'.</Issue>
            </Message>
            <Message Id="vbs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.Designer.vb" Line="528">Correct the spelling of the unrecognized token 'vbs' in the literal '"New vbs"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ListView1_DoubleClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="748">Method 'Form5.ListView1_DoubleClick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ListView1_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="766">Modify 'Form5.ListView1_KeyPress(Object, KeyPressEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="761">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.ListView1_KeyPress(Object, KeyPressEventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="762">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.ListView1_KeyPress(Object, KeyPressEventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ListView1_SelectedIndexChanged_1(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="781">'Form5.ListView1_SelectedIndexChanged_1(Object, EventArgs)' has a cyclomatic complexity of 43. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="aa1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="790">'Form5.ListView1_SelectedIndexChanged_1(Object, EventArgs)' declares a variable, 'aa1', of type 'String', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="791">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.ListView1_SelectedIndexChanged_1(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pic1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="313">In method 'Form5.pic1_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'f' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlayMusicHidenToolStripMenuItem1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="665">'Form5.PlayMusicHidenToolStripMenuItem1_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PressureToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="706">'Form5.PressureToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetAsWallpaperToolStripMenuItem1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="671">'Form5.SetAsWallpaperToolStripMenuItem1_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowTheme(System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form5.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Form5.SetWindowTheme(IntPtr, String, String)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Form5.SetWindowTheme(IntPtr, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Form5.SetWindowTheme(IntPtr, String, String)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextBox1_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="403">Method 'Form5.TextBox1_KeyPress(Object, KeyPressEventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextBox2_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="427">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form5.TextBox2_KeyPress(Object, KeyPressEventArgs)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="427">Because the behavior of 'String.ToLower()' could vary based on the current user's locale settings, replace this call in 'Form5.TextBox2_KeyPress(Object, KeyPressEventArgs)' with a call to 'String.ToLower(CultureInfo)'. If the result of 'String.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer4_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="716">Method 'Form5.Timer4_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Files(, )".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="715">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Form5.Timer4_Tick(Object, EventArgs)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolStripMenuItem1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="858">Method 'Form5.ToolStripMenuItem1_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Cut".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolStripMenuItem2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="360">Method 'Form5.ToolStripMenuItem2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "\".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolStripMenuItem3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="528">'Form5.ToolStripMenuItem3_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolStripMenuItem4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="538">'Form5.ToolStripMenuItem4_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolStripMenuItem5_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="548">'Form5.ToolStripMenuItem5_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolStripMenuItem7_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="652">'Form5.ToolStripMenuItem7_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolStripMenuItem8_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="659">'Form5.ToolStripMenuItem8_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolStripStatusLabel1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="339">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.ToolStripStatusLabel1_Click(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="340">Because the behavior of 'String.LastIndexOf(String)' could vary based on the current user's locale settings, replace this call in 'Form5.ToolStripStatusLabel1_Click(Object, EventArgs)' with a call to 'String.LastIndexOf(String, StringComparison)'. If the result of 'String.LastIndexOf(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TxtToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="617">'Form5.TxtToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ue" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="827">Correct the casing of 'ue' in member name 'Form5.ue()' by changing it to 'UE'.</Issue>
            </Message>
            <Message Id="ue" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="827">Correct the spelling of 'ue' in member name 'Form5.ue()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="830">'Form5.ue()' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UploadToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="211">In method 'Form5.UploadToolStripMenuItem_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 'o' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ListView+ListViewItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="227">Method 'Form5.UploadToolStripMenuItem_Click(Object, EventArgs)' passes a literal string as parameter 'text' of a call to 'ListView.ListViewItemCollection.Add(String)'. Retrieve the following string(s) from a resource table instead: "---&gt;To a Path--&gt;, ) (Name , )".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ViewEditTextToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form5.vb" Line="267">'Form5.ViewEditTextToolStripMenuItem_Click(Object, EventArgs)' declares a variable, 'x', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form5.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#yy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form5.yy' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="yy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'yy' in member name 'Form5.yy' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form6" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form6.Designer.vb" Line="53">Method 'Form6.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Label1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form6.Designer.vb" Line="66">Method 'Form6.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Label2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form6.vb" Line="21">In method 'Form6.Label2_Click(Object, EventArgs)', call System.IDisposable.Dispose on object 's' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form6.vb" Line="22">Method 'Form6.Label2_Click(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "Pic|*.png".</Issue>
            </Message>
            <Message Id="png" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form6.vb" Line="22">Correct the spelling of the unrecognized token 'png' in the literal '"Pic|*.png"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PictureBox1_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form6.vb" Line="8">In method 'Form6.PictureBox1_MouseDoubleClick(Object, MouseEventArgs)', call System.IDisposable.Dispose on object 's' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form6.vb" Line="9">Method 'Form6.PictureBox1_MouseDoubleClick(Object, MouseEventArgs)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.Set(String)'. Retrieve the following string(s) from a resource table instead: "Pic|*.png".</Issue>
            </Message>
            <Message Id="png" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form6.vb" Line="9">Correct the spelling of the unrecognized token 'png' in the literal '"Pic|*.png"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form7" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form7.Designer.vb" Line="55">Method 'Form7.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Copy and paste".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form7.Designer.vb" Line="69">Method 'Form7.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Get ClipBoard ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form7.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form8" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.Designer.vb" Line="111">Method 'Form8.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Keyboard".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.Designer.vb" Line="89">Method 'Form8.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.Designer.vb" Line="94">Modify the call to 'Timer.Interval.Set(Integer)' in method 'Form8.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_Tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="30">'Form8.Timer1_Tick(Object, EventArgs)' has a cyclomatic complexity of 35. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.RichTextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="43">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="53">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="63">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="64">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ".".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="65">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ".".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="66">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: ".".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="54">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "C".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="32">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "K".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="44">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "S".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="39">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "a".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="37">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "b".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="46">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "c".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="47">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "c".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="59">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "c".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="41">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "d".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="50">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "d".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="52">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "d".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="62">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "d".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="35">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "e".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="48">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "e".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="49">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "e".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="51">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "e".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="58">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "e".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="61">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "e".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="56">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="57">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="38">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "o".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="55">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "o".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="40">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "r".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="60">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "t".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="45">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "u".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form8.vb" Line="36">Method 'Form8.Timer1_Tick(Object, EventArgs)' passes a literal string as parameter 'value' of a call to 'RichTextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "y".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xxx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form8.xxx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form9" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="403">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Form9".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="360">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Company Name :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="153">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Creation Date : ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="234">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File Description :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="109">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "File:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="213">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Hash :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="131">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "ID:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="318">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Language :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="297">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Legal Copyright :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="276">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Legal Trademarks :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="142">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Memory:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="120">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Name:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="255">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Product Name :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Form9.Designer.vb" Line="339">Method 'Form9.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Label.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Version :".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GButton" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'GButton' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="387">In method 'GButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me.ForeColor)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="393">In externally visible method 'GButton.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#R1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GButton.R1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GClass9" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#columnHeader_0" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GClass9.columnHeader_0' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GClass9_ColumnClick(System.Object,System.Windows.Forms.ColumnClickEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="102">Modify 'GClass9.GClass9_ColumnClick(Object, ColumnClickEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="73">Remove the underscores from member name 'GClass9.GClass9_ColumnClick(Object, ColumnClickEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="76">In externally visible method 'GClass9.GClass9_ColumnClick(Object, ColumnClickEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GClass9_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="125">'enumerator', a variable, is cast to type 'IDisposable' multiple times in method 'GClass9.GClass9_KeyDown(Object, KeyEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GClass9_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="169">'enumerator', a variable, is cast to type 'IDisposable' multiple times in method 'GClass9.GClass9_MouseMove(Object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="191">'enumerator2', a variable, is cast to type 'IDisposable' multiple times in method 'GClass9.GClass9_MouseMove(Object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GClass9_ParentChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="209">Modify 'GClass9.GClass9_ParentChanged(Object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#method_0()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="217">'GClass9.method_0()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#method_1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="method" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="221">Correct the casing of 'method' in member name 'GClass9.method_1()' by changing it to 'Method'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="221">Remove the underscores from member name 'GClass9.method_1()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#method_2()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="238">Modify 'GClass9.method_2()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="244">Modify 'GClass9.method_2()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="method" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="225">Correct the casing of 'method' in member name 'GClass9.method_2()' by changing it to 'Method'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="225">Remove the underscores from member name 'GClass9.method_2()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#method_3()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="276">Modify 'GClass9.method_3()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="method" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="263">Correct the casing of 'method' in member name 'GClass9.method_3()' by changing it to 'Method'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="263">Remove the underscores from member name 'GClass9.method_3()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="292">In method 'GClass9.OnDrawColumnHeader(DrawListViewColumnHeaderEventArgs)', call System.IDisposable.Dispose on object 'New Pen(ControlPaint.Light(Me.BackColor, 0!))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="293">In method 'GClass9.OnDrawColumnHeader(DrawListViewColumnHeaderEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me.ForeColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="294">In method 'GClass9.OnDrawColumnHeader(DrawListViewColumnHeaderEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me.ForeColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="285">In method 'GClass9.OnDrawColumnHeader(DrawListViewColumnHeaderEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="295">Modify 'GClass9.OnDrawColumnHeader(DrawListViewColumnHeaderEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="291">In externally visible method 'GClass9.OnDrawColumnHeader(DrawListViewColumnHeaderEventArgs)', validate parameter 'drawListViewColumnHeaderEventArgs_0' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="304">In externally visible method 'GClass9.OnDrawItem(DrawListViewItemEventArgs)', validate parameter 'drawListViewItemEventArgs_0' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="309">In externally visible method 'GClass9.OnDrawSubItem(DrawListViewSubItemEventArgs)', validate parameter 'drawListViewSubItemEventArgs_0' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#point_1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GClass9.point_1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fic" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Fic" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fic' in member name 'GClass9.Fic(Object, EventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GClass9+GClass10" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'GClass9.GClass10'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32,System.Windows.Forms.SortOrder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="332">In member 'GClass9.GClass10.New(Integer, SortOrder)', consider replacing the language-specific data type identifier 'int' in parameter name 'int_1' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="332">In member 'GClass9.GClass10.New(Integer, SortOrder)', remove the underscores from parameter name 'int_1'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="332">In member 'GClass9.GClass10.New(Integer, SortOrder)', remove the underscores from parameter name 'sortOrder_1'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Compare(System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="337">In member 'GClass9.GClass10.Compare(Object, Object)', consider replacing the data type identifier 'object' in parameter name 'object_0' with a more generic term, such as 'value'.</Issue>
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="337">In member 'GClass9.GClass10.Compare(Object, Object)', consider replacing the data type identifier 'object' in parameter name 'object_1' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="337">In member 'GClass9.GClass10.Compare(Object, Object)', remove the underscores from parameter name 'object_0'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="337">In member 'GClass9.GClass10.Compare(Object, Object)', remove the underscores from parameter name 'object_1'.</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="359">Because the behavior of 'String.Compare(String, String)' could vary based on the current user's locale settings, replace this call in 'GClass9.GClass10.Compare(Object, Object)' with a call to 'String.Compare(String, String, StringComparison)'. If the result of 'String.Compare(String, String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="GClass9.vb" Line="367">Because the behavior of 'String.Compare(String, String)' could vary based on the current user's locale settings, replace this call in 'GClass9.GClass10.Compare(Object, Object)' with a call to 'String.Compare(String, String, StringComparison)'. If the result of 'String.Compare(String, String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GTheme" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'GTheme' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="347">In method 'GTheme.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me.ForeColor)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="353">In externally visible method 'GTheme.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraAlertBox" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AlertStyle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_AlertStyle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="869">'HuraAlertBox.AlertStyle.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="943">In externally visible method 'HuraAlertBox.OnMouseMove(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="919">In method 'HuraAlertBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(borderColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="918">In method 'HuraAlertBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(innerColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="929">In method 'HuraAlertBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(textColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="930">In method 'HuraAlertBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(textColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="935">In method 'HuraAlertBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(textColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="932">In method 'HuraAlertBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'exitFont' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="927">In method 'HuraAlertBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'styleFont' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="933">Method 'HuraAlertBox.OnPaint(PaintEventArgs)' passes a literal string as parameter 'text' of a call to 'Graphics.MeasureString(String, Font)'. Retrieve the following string(s) from a resource table instead: "r".</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="888">In externally visible method 'HuraAlertBox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraButton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Hura" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Hura' in type name 'HuraButton'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="434">In method 'HuraButton.OnPaint(PaintEventArgs)', object 'B' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'B' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="454">In method 'HuraButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(100, 100, 100))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="450">In method 'HuraButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(50, Color.Black))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="456">In method 'HuraButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="462">In externally visible method 'HuraButton.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AccentColorChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'HuraButton.AccentColorChangedEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'HuraButton.AccentColorChangedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraButton+AccentColorChangedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'HuraButton.AccentColorChangedEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraButton+ColorSchemes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'HuraButton.ColorSchemes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraCheckBox" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'HuraCheckBox' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="534">In externally visible method 'HuraCheckBox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraComboBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Hura" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Hura' in type name 'HuraComboBox'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DrawTriangle(System.Drawing.Color,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Graphics)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="678">In method 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', call System.IDisposable.Dispose on object 'New SolidBrush(Clr)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Clr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="673">In member 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'Clr' in parameter name 'Clr' by changing it to 'clr'.</Issue>
            </Message>
            <Message Id="First" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="673">In member 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'First' in parameter name 'FirstPoint' by changing it to 'first'.</Issue>
            </Message>
            <Message Id="G" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="673">In member 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'G' in parameter name 'G' by changing it to 'g'.</Issue>
            </Message>
            <Message Id="Second" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="673">In member 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'Second' in parameter name 'SecondPoint' by changing it to 'second'.</Issue>
            </Message>
            <Message Id="Third" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="673">In member 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', correct the casing of 'Third' in parameter name 'ThirdPoint' by changing it to 'third'.</Issue>
            </Message>
            <Message Id="G" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="673">In method 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', consider providing a more meaningful name than parameter name 'G'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="673">The 'this' parameter (or 'Me' in Visual Basic) of 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="678">In externally visible method 'HuraComboBox.DrawTriangle(Color, Point, Point, Point, Graphics)', validate parameter 'G' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="703">In method 'HuraComboBox.OnPaint(PaintEventArgs)', object 'B' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'B' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="721">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(100, 100, 100))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="723">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(100, 100, 100))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="719">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(100, 100, 100), 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="720">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(100, 100, 100), 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="716">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.White)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="714">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.White, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="715">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.White, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="729">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="731">In method 'HuraComboBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="732">Modify 'HuraComboBox.OnPaint(PaintEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Curve" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="705">'HuraComboBox.OnPaint(PaintEventArgs)' declares a variable, 'Curve', of type 'Integer', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="736">In externally visible method 'HuraComboBox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceItem(System.Object,System.Windows.Forms.DrawItemEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="659">In method 'HuraComboBox.ReplaceItem(Object, DrawItemEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(35, 35, 35))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="661">In method 'HuraComboBox.ReplaceItem(Object, DrawItemEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.White)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="655">In method 'HuraComboBox.ReplaceItem(Object, DrawItemEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._AccentColor)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="669">Modify 'HuraComboBox.ReplaceItem(Object, DrawItemEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="652">In externally visible method 'HuraComboBox.ReplaceItem(Object, DrawItemEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartIndex" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_StartIndex()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="639">'HuraComboBox.StartIndex.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_StartIndex(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="645">Modify 'HuraComboBox.StartIndex.Set(Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraComboBox+ColorSchemes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'HuraComboBox.ColorSchemes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraControlBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Hura" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Hura' in type name 'HuraControlBox'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="301">In externally visible method 'HuraControlBox.OnMouseMove(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="319">In method 'HuraControlBox.OnPaint(PaintEventArgs)', object 'B' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'B' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="335">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'ButtonFont' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="337">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(210, 210, 210))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="341">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(210, 210, 210))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="343">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(210, 210, 210))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="346">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(210, 210, 210))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="328">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._AccentColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="330">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._AccentColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="332">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._AccentColor)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="337">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="341">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="343">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="346">In method 'HuraControlBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="349">In externally visible method 'HuraControlBox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ColorSchemeChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'HuraControlBox.ColorSchemeChangedEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'HuraControlBox.ColorSchemeChangedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraControlBox+ColorSchemeChangedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'HuraControlBox.ColorSchemeChangedEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraControlBox+ColorSchemes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'HuraControlBox.ColorSchemes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Hura" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Hura' in type name 'HuraForm'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="113">In externally visible method 'HuraForm.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="132">In method 'HuraForm.OnPaint(PaintEventArgs)', object 'B' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'B' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="139">In method 'HuraForm.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(100, 100, 100))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="137">In method 'HuraForm.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._AccentColor, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="138">In method 'HuraForm.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me.ForeColor)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="140">In externally visible method 'HuraForm.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pos" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HuraForm.pos' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AccentColorChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'HuraForm.AccentColorChangedEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'HuraForm.AccentColorChangedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ColorSchemeChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'HuraForm.ColorSchemeChangedEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'HuraForm.ColorSchemeChangedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraForm+AccentColorChangedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'HuraForm.AccentColorChangedEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraForm+ColorSchemeChangedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'HuraForm.ColorSchemeChangedEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraForm+ColorSchemes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'HuraForm.ColorSchemes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraGroupBox" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'HuraGroupBox' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="489">In method 'HuraGroupBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(87, 87, 87))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="488">In method 'HuraGroupBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(50, 50, 50))' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="482">In externally visible method 'HuraGroupBox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraModule" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="15">Initialize all static fields in 'HuraModule' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#B" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HuraModule.B' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MeasureString(System.String,System.Drawing.Font)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="23">'HuraModule.MeasureString(String, Font)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MeasureString(System.String,System.Drawing.Font,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="27">'HuraModule.MeasureString(String, Font, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraProgressBar" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'HuraProgressBar' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Maximum" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Maximum(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
               <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="768">'HuraProgressBar.Maximum.Set(Integer)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Minimum" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Minimum(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
               <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="751">'HuraProgressBar.Minimum.Set(Integer)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="814">In externally visible method 'HuraProgressBar.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraRadioButton" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'HuraRadioButton' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#InvalidateParent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="194">'C', a variable, is cast to type 'HuraRadioButton' multiple times in method 'HuraRadioButton.InvalidateParent()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class6.vb" Line="209">In externally visible method 'HuraRadioButton.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraTextBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Hura" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Hura' in type name 'HuraTextBox'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ColorSchemeChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'HuraTextBox.ColorSchemeChangedEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'HuraTextBox.ColorSchemeChangedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HuraTextBox+ColorSchemeChangedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'HuraTextBox.ColorSchemeChangedEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuraTextBox+ColorSchemes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'HuraTextBox.ColorSchemes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="KX" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Disconnect(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="86">Modify 'KX.Disconnect(Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="90">Modify 'KX.Disconnect(Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IP(System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="158">Modify 'KX.IP(ByRef Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="155">Consider a design that does not require that 'xxx' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NEWSKT()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="54">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'KX.NEWSKT()' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Online" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'KX.Online' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List(Of Integer)' in 'KX.Online' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PND()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="80">Modify 'KX.PND()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RC(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="97">In method 'KX.RC(Integer)', call System.IDisposable.Dispose on object 'M' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="126">In method 'KX.RC(Integer)', call System.IDisposable.Dispose on object 'M' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="107">Modify 'KX.RC(Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="139">Modify 'KX.RC(Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="149">Modify 'KX.RC(Integer)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Send(System.Int32,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="28">In method 'KX.Send(Integer, Byte())', call System.IDisposable.Dispose on object 'm' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="32">Modify 'KX.Send(Integer, Byte())' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="25">In method 'KX.Send(Integer, Byte())', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="29">In externally visible method 'KX.Send(Integer, Byte())', validate parameter 'b' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Send(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="22">In method 'KX.Send(Integer, String)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SK" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'KX.SK' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Start(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="P" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="14">In member 'KX.Start(Integer)', correct the casing of 'P' in parameter name 'P' by changing it to 'p'.</Issue>
            </Message>
            <Message Id="P" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="14">In method 'KX.Start(Integer)', consider providing a more meaningful name than parameter name 'P'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stops()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="10">Modify 'KX.stops()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="stops" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="KX.vb" Line="6">Correct the casing of 'stops' in member name 'KX.stops()' by changing it to 'Stops'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Connected" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'KX.ConnectedEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'KX.ConnectedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Data" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'KX.DataEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'KX.DataEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Datad" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'KX.DatadEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'KX.DatadEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message Id="Datad" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datad' in member name 'KX.Datad(Data)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisConnected" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DisConnected" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'DisConnected' in member name 'KX.DisConnected(Integer)' exists as a discrete term. If your usage is intended to be single word, case it as 'Disconnected' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'KX.DisConnectedEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'KX.DisConnectedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="KX+ConnectedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'KX.ConnectedEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="KX+DatadEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datad" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datad' in type name 'KX.DatadEventHandler'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'KX.DatadEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="KX+DataEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="B" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="85" Level="Error">In delegate 'KX.DataEventHandler', correct the casing of 'B' in parameter name 'B' by changing it to 'b'.</Issue>
          </Message>
          <Message Id="B" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'KX.DataEventHandler', consider providing a more meaningful name than parameter name 'B'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'KX.DataEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="KX+DisConnectedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DisConnected" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'DisConnected' in type name 'KX.DisConnectedEventHandler' exists as a discrete term. If your usage is intended to be single word, case it as 'Disconnected'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'KX.DisConnectedEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ListViewColumnSorter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Collections.CaseInsensitiveComparer.#ctor" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class1.vb" Line="19">Because the behavior of 'CaseInsensitiveComparer.New()' could vary based on the current user's locale settings, replace this call in 'ListViewColumnSorter.New()' with a call to 'CaseInsensitiveComparer.New(CultureInfo)'. If the result of 'CaseInsensitiveComparer.New(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Compare(System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class1.vb" Line="32">Modify 'ListViewColumnSorter.Compare(Object, Object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Module1+Kys" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'Module1.Kys' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PrecisionTimer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CreateTimerQueueTimer(System.IntPtr&amp;,System.IntPtr,comet.PrecisionTimer+TimerDelegate,System.IntPtr,System.UInt32,System.UInt32,System.UInt32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'PrecisionTimer.CreateTimerQueueTimer(ByRef IntPtr, IntPtr, PrecisionTimer.TimerDelegate, IntPtr, UInteger, UInteger, UInteger)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PrecisionTimer.CreateTimerQueueTimer(ByRef IntPtr, IntPtr, PrecisionTimer.TimerDelegate, IntPtr, UInteger, UInteger, UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'PrecisionTimer.CreateTimerQueueTimer(ByRef IntPtr, IntPtr, PrecisionTimer.TimerDelegate, IntPtr, UInteger, UInteger, UInteger)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteTimerQueueTimer(System.IntPtr,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'PrecisionTimer.DeleteTimerQueueTimer(IntPtr, IntPtr, IntPtr)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PrecisionTimer.DeleteTimerQueueTimer(IntPtr, IntPtr, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'PrecisionTimer.DeleteTimerQueueTimer(IntPtr, IntPtr, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DisposableTypesShouldDeclareFinalizer" Category="Microsoft.Usage" CheckId="CA2216" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2038">Implement a finalizer or destructor on 'PrecisionTimer'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Enabled" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Enabled()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1985">'PrecisionTimer.Enabled.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Handle" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'PrecisionTimer.Handle' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThrowNewException(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2035">'PrecisionTimer.ThrowNewException(String)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2034">The 'this' parameter (or 'Me' in Visual Basic) of 'PrecisionTimer.ThrowNewException(String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="2035">Because the behavior of 'String.Format(String, Object, Object)' could vary based on the current user's locale settings, replace this call in 'PrecisionTimer.ThrowNewException(String)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Seperator" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'Seperator' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#B1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Seperator.B1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="446">In method 'Seperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._Color1)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="449">In method 'Seperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._Color1)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="447">In method 'Seperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._Color2)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="450">In method 'Seperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._Color2)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="453">In externally visible method 'Seperator.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#R1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Seperator.R1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rotation" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Seperator.Rotation' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Theme" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Image" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Image()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="164">'Theme.Image.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Image(System.Drawing.Image)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="167">'Theme.Image.Set(Image)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MoveHeight" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_MoveHeight()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="39">'Theme.MoveHeight.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_MoveHeight(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="42">'Theme.MoveHeight.Set(Integer)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="50">In externally visible method 'Theme.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Resizable" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Resizable()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="29">'Theme.Resizable.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Resizable(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="32">'Theme.Resizable.Set(Boolean)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SetTransparent(System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="122">'Theme.SetTransparent(Color)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThemeContainer154" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#BorderStyle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_BorderStyle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="441">'ThemeContainer154.BorderStyle.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_BorderStyle(System.Windows.Forms.FormBorderStyle)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="444">'ThemeContainer154.BorderStyle.Set(FormBorderStyle)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Center(System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="774">'ThemeContainer154.Center(Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Drawing.Rectangle,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="765">'ThemeContainer154.Center(Rectangle, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Drawing.Rectangle,System.Drawing.Size)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="769">'ThemeContainer154.Center(Rectangle, Size)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Drawing.Size)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="777">'ThemeContainer154.Center(Size)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Drawing.Size,System.Drawing.Size)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="784">'ThemeContainer154.Center(Size, Size)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="780">'ThemeContainer154.Center(Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="788">'ThemeContainer154.Center(Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Colors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Colors(comet.Bloom[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="508">'ThemeContainer154.Colors.Set(Bloom())' appears to have no upstream public or protected callers.</Issue>
              </Message>
              <Message Id="B" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="508">'B', a variable declared in 'ThemeContainer154.Colors.Set(Bloom())', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ControlMode" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ControlMode()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="632">'ThemeContainer154.ControlMode.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_ControlMode(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="635">'ThemeContainer154.ControlMode.Set(Boolean)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CreateRound(System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1083">'ThemeContainer154.CreateRound(Rectangle, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRound(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1078">'ThemeContainer154.CreateRound(Integer, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Customization" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Customization()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="521">'ThemeContainer154.Customization.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Customization(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="524">'ThemeContainer154.Customization.Set(String)' appears to have no upstream public or protected callers.</Issue>
              </Message>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="534">Modify 'ThemeContainer154.Customization.Set(String)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
              </Message>
              <Message Id="Items" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="524">'Items', a variable declared in 'ThemeContainer154.Customization.Set(String)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="880">'ThemeContainer154.DrawBorders(Pen)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="883">'ThemeContainer154.DrawBorders(Pen, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="873">'ThemeContainer154.DrawBorders(Pen, Rectangle, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="870">'ThemeContainer154.DrawBorders(Pen, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="886">'ThemeContainer154.DrawBorders(Pen, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="876">'ThemeContainer154.DrawBorders(Pen, Integer, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCorners(System.Drawing.Color,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="846">'ThemeContainer154.DrawCorners(Color, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCorners(System.Drawing.Color,System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="836">'ThemeContainer154.DrawCorners(Color, Rectangle, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCorners(System.Drawing.Color,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="833">'ThemeContainer154.DrawCorners(Color, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCorners(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="839">'ThemeContainer154.DrawCorners(Color, Integer, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1000">'ThemeContainer154.DrawGradient(Color, Color, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1004">'ThemeContainer154.DrawGradient(Color, Color, Rectangle, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="991">'ThemeContainer154.DrawGradient(Color, Color, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="995">'ThemeContainer154.DrawGradient(Color, Color, Integer, Integer, Integer, Integer, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="979">'ThemeContainer154.DrawGradient(ColorBlend, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="984">'ThemeContainer154.DrawGradient(ColorBlend, Rectangle, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="970">'ThemeContainer154.DrawGradient(ColorBlend, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="974">'ThemeContainer154.DrawGradient(ColorBlend, Integer, Integer, Integer, Integer, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Drawing.Image,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="955">'ThemeContainer154.DrawImage(Image, Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Drawing.Image,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="958">'ThemeContainer154.DrawImage(Image, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Drawing.Image,System.Windows.Forms.HorizontalAlignment,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="934">'ThemeContainer154.DrawImage(Image, HorizontalAlignment, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="948">'ThemeContainer154.DrawImage(Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="951">'ThemeContainer154.DrawImage(Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Windows.Forms.HorizontalAlignment,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="931">'ThemeContainer154.DrawImage(HorizontalAlignment, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawPixel(System.Drawing.Color,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="818">'ThemeContainer154.DrawPixel(Color, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1062">'ThemeContainer154.DrawRadial(Color, Color, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1066">'ThemeContainer154.DrawRadial(Color, Color, Rectangle, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1053">'ThemeContainer154.DrawRadial(Color, Color, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1057">'ThemeContainer154.DrawRadial(Color, Color, Integer, Integer, Integer, Integer, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1031">'ThemeContainer154.DrawRadial(ColorBlend, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1034">'ThemeContainer154.DrawRadial(ColorBlend, Rectangle, Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1037">'ThemeContainer154.DrawRadial(ColorBlend, Rectangle, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1018">'ThemeContainer154.DrawRadial(ColorBlend, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1022">'ThemeContainer154.DrawRadial(ColorBlend, Integer, Integer, Integer, Integer, Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1026">'ThemeContainer154.DrawRadial(ColorBlend, Integer, Integer, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadialBrush2" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ThemeContainer154.DrawRadialBrush2' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawText(System.Drawing.Brush,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="916">'ThemeContainer154.DrawText(Brush, Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawText(System.Drawing.Brush,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="920">'ThemeContainer154.DrawText(Brush, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawText(System.Drawing.Brush,System.String,System.Windows.Forms.HorizontalAlignment,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="900">'ThemeContainer154.DrawText(Brush, String, HorizontalAlignment, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawText(System.Drawing.Brush,System.Windows.Forms.HorizontalAlignment,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="897">'ThemeContainer154.DrawText(Brush, HorizontalAlignment, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetColor(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="673">'ThemeContainer154.GetColor(String)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPen(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="662">'ThemeContainer154.GetPen(String)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPen(System.String,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="665">'ThemeContainer154.GetPen(String, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Header" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Header()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="617">'ThemeContainer154.Header.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Header(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="620">'ThemeContainer154.Header.Set(Integer)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Image" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Image()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="485">'ThemeContainer154.Image.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Image(System.Drawing.Image)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="488">'ThemeContainer154.Image.Set(Image)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ImageSize" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ImageSize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="574">'ThemeContainer154.ImageSize.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#InvalidateCustimization()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="702">In method 'ThemeContainer154.InvalidateCustimization()', object 'M' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'M' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="B" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="701">'B', a variable declared in 'ThemeContainer154.InvalidateCustimization()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsAnimated" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_IsAnimated()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="648">'ThemeContainer154.IsAnimated.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_IsAnimated(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="651">'ThemeContainer154.IsAnimated.Set(Boolean)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#IsParentForm" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_IsParentForm()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="581">'ThemeContainer154.IsParentForm.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#LockHeight" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_LockHeight()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="606">'ThemeContainer154.LockHeight.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_LockHeight(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="609">'ThemeContainer154.LockHeight.Set(Integer)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#LockWidth" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_LockWidth()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="595">'ThemeContainer154.LockWidth.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_LockWidth(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="598">'ThemeContainer154.LockWidth.Set(Integer)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Measure()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="800">'ThemeContainer154.Measure()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Measure(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="805">'ThemeContainer154.Measure(String)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Movable" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Movable()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="405">'ThemeContainer154.Movable.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Movable(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="408">'ThemeContainer154.Movable.Set(Boolean)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#NoRounding" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_NoRounding()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="474">'ThemeContainer154.NoRounding.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_NoRounding(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="477">'ThemeContainer154.NoRounding.Set(Boolean)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Offset(System.Drawing.Point,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="754">'ThemeContainer154.Offset(Point, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Offset(System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="742">'ThemeContainer154.Offset(Rectangle, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Offset(System.Drawing.Size,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="748">'ThemeContainer154.Offset(Size, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="185">In externally visible method 'ThemeContainer154.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="92">In externally visible method 'ThemeContainer154.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColor(System.String,System.Byte,System.Byte,System.Byte)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="680">'ThemeContainer154.SetColor(String, Byte, Byte, Byte)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColor(System.String,System.Byte,System.Byte,System.Byte,System.Byte)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="683">'ThemeContainer154.SetColor(String, Byte, Byte, Byte, Byte)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColor(System.String,System.Byte,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="686">'ThemeContainer154.SetColor(String, Byte, Color)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColor(System.String,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="677">'ThemeContainer154.SetColor(String, Color)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sizable" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Sizable()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="415">'ThemeContainer154.Sizable.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Sizable(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="418">'ThemeContainer154.Sizable.Set(Boolean)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SmartBounds" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_SmartBounds()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="395">'ThemeContainer154.SmartBounds.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_SmartBounds(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="398">'ThemeContainer154.SmartBounds.Set(Boolean)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#StartPosition" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_StartPosition()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="460">'ThemeContainer154.StartPosition.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_StartPosition(System.Windows.Forms.FormStartPosition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="463">'ThemeContainer154.StartPosition.Set(FormStartPosition)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#State" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ThemeContainer154.State' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransparencyKey" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_TransparencyKey()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="425">'ThemeContainer154.TransparencyKey.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_TransparencyKey(System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="428">'ThemeContainer154.TransparencyKey.Set(Color)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Transparent" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Transparent()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="549">'ThemeContainer154.Transparent.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Transparent(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
               <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="557">'ThemeContainer154.Transparent.Set(Boolean)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
              </Message>
              <Message Id="BackColor" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="557">Correct the spelling of the unrecognized token 'BackColor' in the literal '"Unable to change value to false while a transparent BackColor is in use."'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ThemeControl" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AllowTransparent()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="199">'ThemeControl.AllowTransparent()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Image" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Image()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="292">'ThemeControl.Image.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Image(System.Drawing.Image)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="295">'ThemeControl.Image.Set(Image)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ImageWidth" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ImageWidth()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="284">'ThemeControl.ImageWidth.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class2.vb" Line="228">In externally visible method 'ThemeControl.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThemeControl154" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Center(System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1547">'ThemeControl154.Center(Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Drawing.Rectangle,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1538">'ThemeControl154.Center(Rectangle, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Drawing.Rectangle,System.Drawing.Size)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1542">'ThemeControl154.Center(Rectangle, Size)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Drawing.Size,System.Drawing.Size)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1557">'ThemeControl154.Center(Size, Size)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Center(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1553">'ThemeControl154.Center(Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Colors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Colors(comet.Bloom[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message Id="B" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1353">'B', a variable declared in 'ThemeControl154.Colors.Set(Bloom())', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Customization" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Customization()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1366">'ThemeControl154.Customization.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Customization(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1379">Modify 'ThemeControl154.Customization.Set(String)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
              </Message>
              <Message Id="Items" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1369">'Items', a variable declared in 'ThemeControl154.Customization.Set(String)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1649">'ThemeControl154.DrawBorders(Pen)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1652">'ThemeControl154.DrawBorders(Pen, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1642">'ThemeControl154.DrawBorders(Pen, Rectangle, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1639">'ThemeControl154.DrawBorders(Pen, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1655">'ThemeControl154.DrawBorders(Pen, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorders(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1645">'ThemeControl154.DrawBorders(Pen, Integer, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCorners(System.Drawing.Color,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1615">'ThemeControl154.DrawCorners(Color, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCorners(System.Drawing.Color,System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1605">'ThemeControl154.DrawCorners(Color, Rectangle, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCorners(System.Drawing.Color,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1602">'ThemeControl154.DrawCorners(Color, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCorners(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1608">'ThemeControl154.DrawCorners(Color, Integer, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1769">'ThemeControl154.DrawGradient(Color, Color, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1773">'ThemeControl154.DrawGradient(Color, Color, Rectangle, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1760">'ThemeControl154.DrawGradient(Color, Color, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1764">'ThemeControl154.DrawGradient(Color, Color, Integer, Integer, Integer, Integer, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1748">'ThemeControl154.DrawGradient(ColorBlend, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1753">'ThemeControl154.DrawGradient(ColorBlend, Rectangle, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1739">'ThemeControl154.DrawGradient(ColorBlend, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawGradient(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1743">'ThemeControl154.DrawGradient(ColorBlend, Integer, Integer, Integer, Integer, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Drawing.Image,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1724">'ThemeControl154.DrawImage(Image, Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Drawing.Image,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1727">'ThemeControl154.DrawImage(Image, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Drawing.Image,System.Windows.Forms.HorizontalAlignment,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1703">'ThemeControl154.DrawImage(Image, HorizontalAlignment, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1717">'ThemeControl154.DrawImage(Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1720">'ThemeControl154.DrawImage(Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawImage(System.Windows.Forms.HorizontalAlignment,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1700">'ThemeControl154.DrawImage(HorizontalAlignment, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawPixel(System.Drawing.Color,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1587">'ThemeControl154.DrawPixel(Color, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1831">'ThemeControl154.DrawRadial(Color, Color, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1835">'ThemeControl154.DrawRadial(Color, Color, Rectangle, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1822">'ThemeControl154.DrawRadial(Color, Color, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1826">'ThemeControl154.DrawRadial(Color, Color, Integer, Integer, Integer, Integer, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1800">'ThemeControl154.DrawRadial(ColorBlend, Rectangle)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1803">'ThemeControl154.DrawRadial(ColorBlend, Rectangle, Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Rectangle,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1806">'ThemeControl154.DrawRadial(ColorBlend, Rectangle, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1787">'ThemeControl154.DrawRadial(ColorBlend, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1791">'ThemeControl154.DrawRadial(ColorBlend, Integer, Integer, Integer, Integer, Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawRadial(System.Drawing.Drawing2D.ColorBlend,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1795">'ThemeControl154.DrawRadial(ColorBlend, Integer, Integer, Integer, Integer, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawText(System.Drawing.Brush,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1685">'ThemeControl154.DrawText(Brush, Point)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawText(System.Drawing.Brush,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1689">'ThemeControl154.DrawText(Brush, Integer, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPen(System.String,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1444">'ThemeControl154.GetPen(String, Single)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Image" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Image()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1305">'ThemeControl154.Image.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ImageSize" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ImageSize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1398">'ThemeControl154.ImageSize.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#InvalidateCustimization()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1476">In method 'ThemeControl154.InvalidateCustimization()', object 'M' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'M' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="B" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1475">'B', a variable declared in 'ThemeControl154.InvalidateCustimization()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsAnimated" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_IsAnimated()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1427">'ThemeControl154.IsAnimated.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_IsAnimated(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1430">'ThemeControl154.IsAnimated.Set(Boolean)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#LockHeight" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_LockHeight()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1416">'ThemeControl154.LockHeight.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_LockHeight(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1419">'ThemeControl154.LockHeight.Set(Integer)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#LockWidth" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_LockWidth()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1405">'ThemeControl154.LockWidth.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_LockWidth(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1408">'ThemeControl154.LockWidth.Set(Integer)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Measure()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1573">'ThemeControl154.Measure()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NoRounding" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_NoRounding()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1294">'ThemeControl154.NoRounding.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Offset(System.Drawing.Point,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1527">'ThemeControl154.Offset(Point, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Offset(System.Drawing.Rectangle,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1515">'ThemeControl154.Offset(Rectangle, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Offset(System.Drawing.Size,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1521">'ThemeControl154.Offset(Size, Integer)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1201">In externally visible method 'ThemeControl154.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1155">In externally visible method 'ThemeControl154.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColor(System.String,System.Byte,System.Byte,System.Byte)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1459">'ThemeControl154.SetColor(String, Byte, Byte, Byte)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColor(System.String,System.Byte,System.Byte,System.Byte,System.Byte)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1462">'ThemeControl154.SetColor(String, Byte, Byte, Byte, Byte)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColor(System.String,System.Byte,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1465">'ThemeControl154.SetColor(String, Byte, Color)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Transparent" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Transparent()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1322">'ThemeControl154.Transparent.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Transparent(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
               <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1330">'ThemeControl154.Transparent.Set(Boolean)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
              </Message>
              <Message Id="BackColor" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class7.vb" Line="1330">Correct the spelling of the unrecognized token 'BackColor' in the literal '"Unable to change value to false while a transparent BackColor is in use."'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="tople1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="tople" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'tople' in type name 'tople1' by changing it to 'Tople'.</Issue>
          </Message>
          <Message Id="tople" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tople' in type name 'tople1'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateParams" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_CreateParams()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="tople1.vb" Line="4">'tople1.CreateParams.Get()' calls into 'ProgressBar.CreateParams.Get()' which has a LinkDemand. By making this call, 'ProgressBar.CreateParams.Get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'tople1.CreateParams.Get()'&#xD;&#xA;   -&gt;'tople1.CreateParams.Get()'</Issue>
              </Message>
              <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
               <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="tople1.vb" Line="4">Add the following security attribute to 'tople1.CreateParams.Get()' in order to match a LinkDemand on base method 'ProgressBar.CreateParams.Get()':  [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)].</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="UDX" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="UDX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'UDX' in type name 'UDX' by changing it to 'Udx'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ButtonBase.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="117">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Programs Folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="129">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Programs".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="70">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Templates Folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="82">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ButtonBase.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Templates".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Form.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="146">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Form.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Extra Install Server".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.GroupBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="50">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'GroupBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Install Server - 1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="97">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'GroupBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Install Server - 2".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="59">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Comet\Folder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="UDX.Designer.vb" Line="106">Method 'UDX.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'TextBox.Text.Set(String)'. Retrieve the following string(s) from a resource table instead: "Comet\Folder".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioButton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_IconColour" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'VisualStudioButton._IconColour' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BaseColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="507">Correct the spelling of 'Colour' in member name 'VisualStudioButton.BaseColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="487">Correct the spelling of 'Colour' in member name 'VisualStudioButton.BorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FontColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="517">Correct the spelling of 'Colour' in member name 'VisualStudioButton.FontColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HoverColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="497">Correct the spelling of 'Colour' in member name 'VisualStudioButton.HoverColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="575">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._BorderColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="568">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BaseColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="582">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="585">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="588">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="601">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="570">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._HoverColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="572">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._PressedColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="582">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="585">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="588">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="601">In method 'VisualStudioButton.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="561">In externally visible method 'VisualStudioButton.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioButton+__ImageAlignment" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'VisualStudioButton.__ImageAlignment'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioContainer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_PressedColour" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'VisualStudioContainer._PressedColour' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BaseColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="190">Correct the spelling of 'Colour' in member name 'VisualStudioContainer.BaseColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="170">Correct the spelling of 'Colour' in member name 'VisualStudioContainer.BorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FontColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="200">Correct the spelling of 'Colour' in member name 'VisualStudioContainer.FontColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HoverColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="180">Correct the spelling of 'Colour' in member name 'VisualStudioContainer.HoverColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="275">In externally visible method 'VisualStudioContainer.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="227">In externally visible method 'VisualStudioContainer.OnMouseMove(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="324">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._BorderColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="342">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="343">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="344">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="345">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="346">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="348">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="349">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="350">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="351">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="352">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="354">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="355">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="356">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="357">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="358">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="336">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="337">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._ControlBoxColours, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="366">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._IconColour, 3!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="367">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._IconColour, 3!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="370">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._IconColour, 3!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="368">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._IconColour, 4!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="369">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._IconColour, 4!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="371">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._IconColour, 4!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="323">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BaseColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="353">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BaseColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="339">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ControlBoxColours)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="364">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="372">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="375">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="328">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._HoverColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="330">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._HoverColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="332">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._HoverColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="364">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="372">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="375">In method 'VisualStudioContainer.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="318">In externally visible method 'VisualStudioContainer.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioContainer+__FormOrWhole" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'VisualStudioContainer.__FormOrWhole'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioContainer+__IconStyle" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'VisualStudioContainer.__IconStyle'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioGroupBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3001">Correct the spelling of 'Colour' in member name 'VisualStudioGroupBox.BorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HeaderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3021">Correct the spelling of 'Colour' in member name 'VisualStudioGroupBox.HeaderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MainColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3031">Correct the spelling of 'Colour' in member name 'VisualStudioGroupBox.MainColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3061">In method 'VisualStudioGroupBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._BorderColour, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3059">In method 'VisualStudioGroupBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(33, 33, 33))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3058">In method 'VisualStudioGroupBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._HeaderColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3057">In method 'VisualStudioGroupBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._MainColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3060">In method 'VisualStudioGroupBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3052">In externally visible method 'VisualStudioGroupBox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="3011">Correct the spelling of 'Colour' in member name 'VisualStudioGroupBox.TextColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioHorizontalScrollBar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ArrowHoveerColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1657">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.ArrowHoveerColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Hoveer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1657">Correct the spelling of 'Hoveer' in member name 'VisualStudioHorizontalScrollBar.ArrowHoveerColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ArrowNormalColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1647">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.ArrowNormalColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ArrowPressedColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1667">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.ArrowPressedColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BaseColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1607">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.BaseColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1850">In externally visible method 'VisualStudioHorizontalScrollBar.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1877">In externally visible method 'VisualStudioHorizontalScrollBar.OnMouseMove(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseUp(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1902">In externally visible method 'VisualStudioHorizontalScrollBar.OnMouseUp(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1982">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowHoveerColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1985">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowHoveerColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1970">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1974">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1976">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1977">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1983">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1986">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1988">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1989">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1993">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1994">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1969">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowPressedColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1973">In method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowPressedColour)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1939">In externally visible method 'VisualStudioHorizontalScrollBar.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OuterBorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1677">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.OuterBorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbBorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1687">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.ThumbBorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbHoverColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1627">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.ThumbHoverColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbNormalColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1617">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.ThumbNormalColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbPressed" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'VisualStudioHorizontalScrollBar.ThumbPressed' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbPressedColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1637">Correct the spelling of 'Colour' in member name 'VisualStudioHorizontalScrollBar.ThumbPressedColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Scroll" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'VisualStudioHorizontalScrollBar.ScrollEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioHorizontalScrollBar+__InnerLineCount" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'VisualStudioHorizontalScrollBar.__InnerLineCount'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioHorizontalScrollBar+ScrollEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'VisualStudioHorizontalScrollBar.ScrollEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioListBoxWBuiltInScrollBar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="InScroll" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'InScroll' in type name 'VisualStudioListBoxWBuiltInScrollBar' exists as a discrete term. If your usage is intended to be single word, case it as 'Inscroll'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddItem(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Items" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2192">In member 'VisualStudioListBoxWBuiltInScrollBar.AddItem(String)', correct the casing of 'Items' in parameter name 'Items' by changing it to 'items'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddItems(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Items" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2200">In member 'VisualStudioListBoxWBuiltInScrollBar.AddItems(String())', correct the casing of 'Items' in parameter name 'Items' by changing it to 'items'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2201">In externally visible method 'VisualStudioListBoxWBuiltInScrollBar.AddItems(String())', validate parameter 'Items' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BaseColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2039">Correct the spelling of 'Colour' in member name 'VisualStudioListBoxWBuiltInScrollBar.BaseColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2069">Correct the spelling of 'Colour' in member name 'VisualStudioListBoxWBuiltInScrollBar.BorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DontShowInnerScrollbarBorder" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Scrollbar" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2093">The discrete term 'Scrollbar' in member name 'VisualStudioListBoxWBuiltInScrollBar.DontShowInnerScrollbarBorder()' should be expressed as a compound word, 'ScrollBar'.</Issue>
            </Message>
            <Message Id="Dont" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2093">Replace the term 'Dont' in member name 'VisualStudioListBoxWBuiltInScrollBar.DontShowInnerScrollbarBorder()' with the preferred alternate 'DoNot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Font" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Font(System.Drawing.Font)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
               <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2182">Method 'VisualStudioListBoxWBuiltInScrollBar.Font.Set(Font)' passes a literal string as parameter 'text' of a call to 'Graphics.MeasureString(String, Font)'. Retrieve the following string(s) from a resource table instead: "@".</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FontColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2029">Correct the spelling of 'Colour' in member name 'VisualStudioListBoxWBuiltInScrollBar.FontColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Items" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2116">Change 'VisualStudioListBoxWBuiltInScrollBar.Items()' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MultiSelect" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2135">Correct the spelling of 'Multi' in member name 'VisualStudioListBoxWBuiltInScrollBar.MultiSelect()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NonSelectedItemColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2059">Correct the spelling of 'Colour' in member name 'VisualStudioListBoxWBuiltInScrollBar.NonSelectedItemColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2244">In externally visible method 'VisualStudioListBoxWBuiltInScrollBar.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseWheel(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2266">In externally visible method 'VisualStudioListBoxWBuiltInScrollBar.OnMouseWheel(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2315">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Segoe UI", 8!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2316">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Segoe UI", 8!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2317">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Segoe UI", 8!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2319">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Font("Segoe UI", 8!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2323">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(35, 35, 35), 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2314">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._BorderColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2304">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._BorderColour, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2326">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._BorderColour, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2316">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2317">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2319">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2312">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._NonSelectedItemColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2310">In method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._SelectedItemColour)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="EndIndex" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2302">'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)' declares a variable, 'EndIndex', of type 'Integer', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2292">In externally visible method 'VisualStudioListBoxWBuiltInScrollBar.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveItems(comet.VisualStudioListBoxWBuiltInScrollBar+VSListBoxItem[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2223">In externally visible method 'VisualStudioListBoxWBuiltInScrollBar.RemoveItems(VisualStudioListBoxWBuiltInScrollBar.VSListBoxItem())', validate parameter 'items' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedItemColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2049">Correct the spelling of 'Colour' in member name 'VisualStudioListBoxWBuiltInScrollBar.SelectedItemColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedItems" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2128">Change 'VisualStudioListBoxWBuiltInScrollBar.SelectedItems()' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioListBoxWBuiltInScrollBar+VSListBoxItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'VisualStudioListBoxWBuiltInScrollBar.VSListBoxItem'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioNormalTextBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BackgroundColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2887">Correct the spelling of 'Colour' in member name 'VisualStudioNormalTextBox.BackgroundColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2907">Correct the spelling of 'Colour' in member name 'VisualStudioNormalTextBox.BorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2977">In method 'VisualStudioNormalTextBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Color.FromArgb(63, 63, 70), 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2973">In method 'VisualStudioNormalTextBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Color.FromArgb(35, 35, 35)), 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2973">In method 'VisualStudioNormalTextBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(35, 35, 35))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2972">In method 'VisualStudioNormalTextBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Color.FromArgb(42, 42, 42))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2976">In method 'VisualStudioNormalTextBox.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BaseColour)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2959">In externally visible method 'VisualStudioNormalTextBox.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#State" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'VisualStudioNormalTextBox.State' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Style" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2866">The property name 'VisualStudioNormalTextBox.Style()' is confusing given the existence of inherited method 'Control.GetStyle(ControlStyles)'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2897">Correct the spelling of 'Colour' in member name 'VisualStudioNormalTextBox.TextColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioNormalTextBox+Styles" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'VisualStudioNormalTextBox.Styles' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioRadialProgressBar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BaseColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2432">Correct the spelling of 'Colour' in member name 'VisualStudioRadialProgressBar.BaseColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2397">Correct the spelling of 'Colour' in member name 'VisualStudioRadialProgressBar.BorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Increment(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Amount" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2391">In member 'VisualStudioRadialProgressBar.Increment(Integer)', correct the casing of 'Amount' in parameter name 'Amount' by changing it to 'amount'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2483">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', object 'B' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'B' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2493">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Me._BaseColour), 4!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2497">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Me._BaseColour), 4!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2502">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Me._BaseColour), 4!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2492">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Me._BorderColour), 7!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2496">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Me._BorderColour), 7!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2501">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Me._BorderColour), 7!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2498">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Me._ProgressColour), 4!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2503">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(New SolidBrush(Me._ProgressColour), 4!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2493">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BaseColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2497">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BaseColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2502">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BaseColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2492">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BorderColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2496">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BorderColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2501">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BorderColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2498">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ProgressColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2503">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ProgressColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2494">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2499">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2504">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2494">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2499">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2504">In method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2508">In externally visible method 'VisualStudioRadialProgressBar.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProgressColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2420">Correct the spelling of 'Colour' in member name 'VisualStudioRadialProgressBar.ProgressColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2408">Correct the spelling of 'Colour' in member name 'VisualStudioRadialProgressBar.TextColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioSeperator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Seperator" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seperator' in type name 'VisualStudioSeperator'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_Font" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'VisualStudioSeperator._Font' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddEndNotch" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AddEnd" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="687">The compound word 'AddEnd' in member name 'VisualStudioSeperator.AddEndNotch()' exists as a discrete term. If your usage is intended to be single word, case it as 'Addend' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FontColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="719">Correct the spelling of 'Colour' in member name 'VisualStudioSeperator.FontColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LineColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="709">Correct the spelling of 'Colour' in member name 'VisualStudioSeperator.LineColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="762">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="764">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="767">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="768">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="772">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="773">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="775">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="776">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="779">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="780">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="781">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="785">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="787">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="790">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="791">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="796">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="799">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="801">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="802">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="808">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="811">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="813">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="814">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._LineColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="761">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="771">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="784">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="797">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="804">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="809">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._FontColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="761">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="771">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="784">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="797">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="804">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="809">In method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="753">In externally visible method 'VisualStudioSeperator.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioSeperator+__TextLocation" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'VisualStudioSeperator.__TextLocation'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioStatusBar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BaseColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="944">Correct the spelling of 'Colour' in member name 'VisualStudioStatusBar.BaseColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="954">Correct the spelling of 'Colour' in member name 'VisualStudioStatusBar.BorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FirstLabelAlignment" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_FirstLabelAlignment(comet.VisualStudioStatusBar+Alignments)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="870">In method 'VisualStudioStatusBar.FirstLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="873">In method 'VisualStudioStatusBar.FirstLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="876">In method 'VisualStudioStatusBar.FirstLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1112">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._BorderColour, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1071">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1076">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1077">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1085">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1090">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1091">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1100">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1105">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1106">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._SeperatorColour, 1!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1063">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me.BaseColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1093">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._RectColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1108">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._SeperatorColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1109">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._SeperatorColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1067">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1069">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1070">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1073">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1074">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1075">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1081">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1083">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1084">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1087">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1088">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1089">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1096">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1098">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1099">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1102">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1103">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1104">In method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1057">In externally visible method 'VisualStudioStatusBar.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SecondLabelAlignment" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_SecondLabelAlignment(comet.VisualStudioStatusBar+Alignments)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="900">In method 'VisualStudioStatusBar.SecondLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="903">In method 'VisualStudioStatusBar.SecondLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="906">In method 'VisualStudioStatusBar.SecondLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#TextColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="964">Correct the spelling of 'Colour' in member name 'VisualStudioStatusBar.TextColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThirdLabelAlignment" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_ThirdLabelAlignment(comet.VisualStudioStatusBar+Alignments)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="930">In method 'VisualStudioStatusBar.ThirdLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="933">In method 'VisualStudioStatusBar.ThirdLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
               <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="936">In method 'VisualStudioStatusBar.ThirdLabelAlignment.Set(VisualStudioStatusBar.Alignments)', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioStatusBar+Alignments" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'VisualStudioStatusBar.Alignments' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioStatusBar+AmountOfStrings" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'VisualStudioStatusBar.AmountOfStrings' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioTabControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2527">In method 'VisualStudioTabControl.New()', object 'New StringFormat()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'New StringFormat()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ActiveColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2585">Correct the spelling of 'Colour' in member name 'VisualStudioTabControl.ActiveColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BackTabColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2565">Correct the spelling of 'Colour' in member name 'VisualStudioTabControl.BackTabColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BaseColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2575">Correct the spelling of 'Colour' in member name 'VisualStudioTabControl.BaseColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2535">Correct the spelling of 'Colour' in member name 'VisualStudioTabControl.BorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HorizontalLineColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2545">Correct the spelling of 'Colour' in member name 'VisualStudioTabControl.HorizontalLineColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDragOver(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2618">In externally visible method 'VisualStudioTabControl.OnDragOver(DragEventArgs)', validate parameter 'drgevent' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2611">In externally visible method 'VisualStudioTabControl.OnMouseMove(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2693">In method 'VisualStudioTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._BorderColour, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2691">In method 'VisualStudioTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New Pen(Me._HorizLineColour, 2!)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2685">In method 'VisualStudioTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ActiveColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2692">In method 'VisualStudioTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BackTabColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2684">In method 'VisualStudioTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._BaseColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2686">In method 'VisualStudioTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2688">In method 'VisualStudioTabControl.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._TextColour)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2678">Modify 'VisualStudioTabControl.OnPaint(PaintEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2679">Modify 'VisualStudioTabControl.OnPaint(PaintEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2672">In externally visible method 'VisualStudioTabControl.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="2555">Correct the spelling of 'Colour' in member name 'VisualStudioTabControl.TextColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioVerticalScrollBar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_LargeChange" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'VisualStudioVerticalScrollBar._LargeChange' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_Maximum" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'VisualStudioVerticalScrollBar._Maximum' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_Minimum" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'VisualStudioVerticalScrollBar._Minimum' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_SmallChange" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'VisualStudioVerticalScrollBar._SmallChange' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ArrowHoveerColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1217">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.ArrowHoveerColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Hoveer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1217">Correct the spelling of 'Hoveer' in member name 'VisualStudioVerticalScrollBar.ArrowHoveerColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ArrowNormalColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1207">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.ArrowNormalColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ArrowPressedColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1227">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.ArrowPressedColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BaseColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1167">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.BaseColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseDown(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1409">In externally visible method 'VisualStudioVerticalScrollBar.OnMouseDown(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1436">In externally visible method 'VisualStudioVerticalScrollBar.OnMouseMove(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseUp(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1461">In externally visible method 'VisualStudioVerticalScrollBar.OnMouseUp(MouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1541">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowHoveerColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1544">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowHoveerColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1529">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1533">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1535">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1536">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1542">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1545">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1547">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1548">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1552">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1553">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowNormalColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1528">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowPressedColour)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1532">In method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', call System.IDisposable.Dispose on object 'New SolidBrush(Me._ArrowPressedColour)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1498">In externally visible method 'VisualStudioVerticalScrollBar.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OuterBorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1237">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.OuterBorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbBorderColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1247">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.ThumbBorderColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbHoverColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1187">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.ThumbHoverColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbNormalColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1177">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.ThumbNormalColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbPressed" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'VisualStudioVerticalScrollBar.ThumbPressed' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThumbPressedColour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="Class3.vb" Line="1197">Correct the spelling of 'Colour' in member name 'VisualStudioVerticalScrollBar.ThumbPressedColour()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Scroll" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'VisualStudioVerticalScrollBar.ScrollEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisualStudioVerticalScrollBar+__InnerLineCount" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'VisualStudioVerticalScrollBar.__InnerLineCount'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VisualStudioVerticalScrollBar+ScrollEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'VisualStudioVerticalScrollBar.ScrollEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="zoi" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'zoi' has a maintainability index of 16. Rewrite or refactor the type's methods to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DEB(System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="zoi.vb" Line="68">'zoi.DEB(ByRef String)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCountryNumber(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="zoi.vb" Line="89">'zoi.GetCountryNumber(String)' has a cyclomatic complexity of 972. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="zoi.vb" Line="89">'zoi.GetCountryNumber(String)' has a maintainability index of 0. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#siz(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet" File="zoi.vb" Line="2">'zoi.siz(String)' has a cyclomatic complexity of 60. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="comet.My.Resources">
       <Types>
        <Type Name="Resources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Culture" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Culture()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet\My Project" File="Resources.Designer.vb" Line="55">'Resources.Culture.Get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Culture(System.Globalization.CultureInfo)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-11-09 15:45:41Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Shane\Downloads\Comet Rat v0.1.4\comet\comet\comet\My Project" File="Resources.Designer.vb" Line="58">'Resources.Culture.Set(CultureInfo)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="UIMethod">{0} is coupled with {1} different (non-IComponent) types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Resolution Name="UIType">{0} is coupled with {1} different (non-IComponent) types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809">
   <Name>Avoid excessive locals</Name>
   <Description>Method implementations should not contain more than 64 local variables. In order for the run-time to enregister local variables most efficiently, there should be 64 or fewer of them. Enregistering based on flow analysis will not occur for locals in excess of 64, which may result in slower performance.</Description>
   <Resolution Name="Compiler">{0} has {1} local variables, {2} of which were generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182263.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505">
   <Name>Avoid unmaintainable code</Name>
   <Description>Types and methods with a high degree of class coupling, cyclomatic complexity and/or program length can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} has a maintainability index of {1}. Rewrite or refactor the method to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability.</Resolution>
   <Resolution Name="Type">{0} has a maintainability index of {1}. Rewrite or refactor the type's methods to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386043.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeCompoundWord">The discrete term '{0}' in type name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableTypesShouldDeclareFinalizer" Category="Microsoft.Usage" CheckId="CA2216">
   <Name>Disposable types should declare finalizer</Name>
   <Description>If a type implements a Dispose method and has unmanaged resources, it should provide a Finalize method in case Dispose is not explicitly called. The runtime calls the Finalize method or destructor of an object prior to reclaiming its managed resources in a process known as garbage collection. The Finalize method should free any unmanaged resources before they become inaccessible.</Description>
   <Resolution Name="Default">Implement a finalizer or destructor on {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182329.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotHardcodeLocaleSpecificStrings" Category="Microsoft.Globalization" CheckId="CA1302">
   <Name>Do not hardcode locale specific strings</Name>
   <Description>Do not use string literals for system items that have locale-specific designations. Special system locations should be retrieved using provided API such as GetFolderPath. See the System.Environment.SpecialFolder enumeration for more information.</Description>
   <Resolution Name="Default">If the literal '{0}' used in method {1} refers to a special system location, replace it with a call to Environment.GetFolderPath.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182186.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="HResultOrErrorCode">{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
   <Name>Do not indirectly expose methods with link demands</Name>
   <Description>Do not wrap a method protected by a LinkDemand with a method that does not perform a security check. A LinkDemand checks the permissions of the immediate caller rather than checking the permissions of all callers in the call stack. In this case, the permissions of the wrapper method will be checked. If the wrapper method does not, itself, check the permissions of callers higher in the call stack, malicious code might be able to execute the wrapped function even though it lacks permission to do so.</Description>
   <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182303.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="securityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601">
   <Name>Do not use timers that prevent power state changes</Name>
   <Description>Do not poll more often than or utilize timers that fire more frequently than once per second. Higher frequency periodic activity will keep the CPU busy and interfere with power-saving idle timers that turn off the display and hard disks.</Description>
   <Resolution Name="Default">Modify the call to {0} in method {1} to set the timer interval to a value that's greater than or equal to one second.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182230.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="mobilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="DelegateParameter">In delegate {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="DelegateParameterMoreMeaningfulName">In delegate {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Resolution Name="LanguageSpecificMemberParameter">In member {0}, consider replacing the language-specific data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240">
   <Name>Implement ISerializable correctly</Name>
   <Description>If a type is assignable to ISerializable, it should implement GetObjectData. For unsealed types, the GetObjectData method should be callable and overridable by derived types.</Description>
   <Resolution Name="MakeOverridable">Make {0}.GetObjectData virtual and overridable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182342.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementSerializationConstructors" Category="Microsoft.Usage" CheckId="CA2229">
   <Name>Implement serialization constructors</Name>
   <Description>The constructor signature accepts the same arguments as ISerializable.GetObjectData, namely, a SerializationInfo instance and a StreamingContext instance. The constructor should be protected for non-sealed classes and private for sealed classes. Failure to implement a serialization constructor will cause deserialization to fail, and throw a SerializationException.</Description>
   <Resolution Name="MakeUnsealedMagicConstructorFamily">Declare the serialization constructor of {0}, an unsealed type, as protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182343.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
   <Name>Mark boolean P/Invoke arguments with MarshalAs</Name>
   <Description>All boolean P/Invoke parameters and return types should be explicitly marked with the MarshalAs attribute. By default, the system will marshal all booleans as 4-byte UnmanagedType.Bool. This is the correct behavior for Win32 'BOOL' arguments but incorrect for C++ 'bool' arguments, which should be marshaled as 1-byte UnmanagedType.U1. For code maintainability reasons, always explicitly specify the marshaling information for boolean arguments and return values.</Description>
   <Resolution Name="Return">Add the MarshalAsAttribute to the return type of P/Invoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182206.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717">
   <Name>Only FlagsAttribute enums should have plural names</Name>
   <Description>Plural names indicate that the values of the enumeration can be combined. For example, an enumeration named 'Day' indicates a single day, and an enumeration named 'Days' indicates multiple days. Enumeration values should be combined using the bit-wise OR operator only if the Flags attribute is present on the enumeration.</Description>
   <Resolution Name="Default">If the name {0} is plural, change it to its singular form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264487.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123">
   <Name>Override link demands should be identical to base</Name>
   <Description>If a virtual method has a LinkDemand, in many cases, so should any override of it, and if an override has a LinkDemand, so should the overridden virtual method. Because it is possible to call any of the overrides of a virtual method explicitly, they should all have the same LinkDemand status or, if not, should be reviewed. This also applies to LinkDemand security checks for methods that part of an interface implementation, because the caller might use an interface-typed reference to access the method.</Description>
   <Resolution Name="BaseOnly">Add the following security attribute to {0} in order to match a LinkDemand on base method {1}:  {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182305(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="securitytransparencyrules.dll" Version="4.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke declarations should be portable</Name>
   <Description>.</Description>
   <Resolution Name="Parameter">As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122">
   <Name>P/Invoke declarations should not be safe-critical.</Name>
   <Description>Since P/Invokes may not be called by transparent code, they should not be marked as safe-critical methods.  Doing so can lead to confusion on the part of developers who may believe that their transparent code should be able to call the P/Invoke method since it is marked safe-critical.</Description>
   <Resolution Name="Default">P/Invoke method {0} is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="securitytransparencyrules.dll" Version="4.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>P/Invokes should not be visible</Name>
   <Description>Interop layer should not be public. The DllImport attribute should not be applied to publicly accessible members (public or protected).</Description>
   <Resolution Name="Default">Change the accessibility of P/Invoke {0} so that it is no longer visible from outside its assembly.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903">
   <Name>Use only API from targeted framework</Name>
   <Description />
   <Resolution Name="MemberReferencesMember">Member {0} uses member {1}. Because this member was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/cc667408(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006">
   <Name>Use SafeHandle to encapsulate native resources</Name>
   <Description>Use of IntPtr in managed code may indicate a potential security and reliability problem. All uses of IntPtr must be reviewed to determine whether use of a SafeHandle (or similar technology) is required in its place. Problems will occur if the IntPtr represents some native resource (memory, file handle, socket etc.) that managed code is considered to own. I.e. managed code is expected to in some way release the resource and failure to do so would cause resource leakage. In such scenarios security or reliability problems will also exist if multithreaded access is allowed to the IntPtr and a means of releasing the resource represented by the IntPtr. These problems involve recycling of the IntPtr value on resource release while simultaneous use of the resource is being made on another thread, leading to race conditions where one thread can read or write data associated with the wrong resource. For example, if your type stores an OS handle as an IntPtr and allows users to call both Close and any other method using that handle simultaneously (without some kind of synchronization), your code has a handle recycling problem, which causes data corruption and often a security vulnerability. SafeHandle (and its sibling class CriticalHandle) provide a mechanism for encapsulating a native handle to a resource so that such threading problems can be avoided (along with other issues such as the need to carefully control the lifetime of managed objects that contain a copy of the native handle over calls to native methods; ie, you can often remove calls to GC.KeepAlive). There are performance overheads implicit in using SafeHandle (and, to a lesser degree, CriticalHandle) which can often be mitigated through careful design.</Description>
   <Resolution Name="Default">Review usage of {0} (a {1} instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182294.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="reliabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Local">{0}, a variable declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
